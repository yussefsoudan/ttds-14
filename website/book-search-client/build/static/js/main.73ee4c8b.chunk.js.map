{"version":3,"sources":["components/BookCard.js","views/ResultPage.js","components/SearchFeatures.js","api/getSearchResults.js","components/SearchBar.js","api/getAllAuthors.js","api/getAllBookTitles.js","views/SearchPage.js","api/findQuote.js","api/setUp.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginTop","marginBottom","border","cover","maxWidth","minWidth","padding","objectFit","details","flexDirection","content","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","BookCard","resultObj","searchTerms","classes","React","useState","expanded","setExpanded","book","quote","authors","split","i","length","bookDetails","CardContent","style","Typography","gutterBottom","variant","component","categories","pageCount","publishedDate","stars","averageRating","size","spacing","fill","ratingsCount","displayedQuote","lines","more","less","className","anchorClass","width","cite","highlightClassName","searchWords","autoEscape","textToHighlight","Card","CardMedia","src","thumbnail","title","Button","disableRipple","color","href","previewLink","target","align","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","ResultPage","results","data","offset","perPageResults","sort","state","setState","console","log","useEffect","a","onRender","count","handlePaginationClick","sortByKey","array","key","b","x","y","Object","keys","Number","Math","floor","Grid","container","justify","alignItems","item","xs","Pagination","page","onChange","e","FormControlLabel","control","Switch","checked","value","arr","sorting","handleSort","name","label","labelPlacement","slice","filter","map","idx","axios","require","baseURL","getSearchResults","endpoint","params","post","author","bookTitle","genre","yearTo","yearFrom","minRating","responseType","then","response","JSON","stringify","catch","error","formControl","years","push","genres","SearchFeatures","forwardRef","props","ref","book_titles","bookSearch","handleChange","field","handleClear","useImperativeHandle","Autocomplete","id","options","getOptionLabel","book_title","renderInput","TextField","event","newValue","FormControl","InputLabel","Select","labelId","MenuItem","rating","heroContent","backgroundColor","palette","background","paper","heroButtons","margin","SearchBar","correction","useRef","Container","fullWidth","multiline","rowsMax","search_text","res","err","paragraph","param","handleRequest","preventDefault","apiResponse","success","current","getAllAuthors","getAllBookTitles","icon","marginRight","cardGrid","paddingTop","paddingBottom","footer","SearchPage","books","isLoading","errorOccur","errorMsg","errorResponse","getAuthorsandBookNames","searchInput","requestError","Fragment","CssBaseline","CircularProgress","App","connectDB","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0aAkBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,UAAW,KACXC,aAAc,KACdC,OAAQ,yBAEVC,MAAO,CACLC,SAAU,IACVC,SAAU,IACVC,QAAS,EACTC,UAAW,SAEbC,QAAS,CACPT,QAAS,OACTU,cAAe,SACfJ,SAAU,OAEZK,QAAS,GAETC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYjB,EAAMkB,YAAYC,OAAO,YAAa,CAChDC,SAAUpB,EAAMkB,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,sBAIA,SAASQ,EAAT,GAQX,IARwD,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,YACnCC,EAAU5B,IADuC,EAEvB6B,IAAMC,UAAS,GAFQ,mBAEhDC,EAFgD,KAEtCC,EAFsC,KAInDC,EAAQP,EACRQ,EAAQR,EAAUQ,MAASR,EAAUQ,MAAQ,GAE7CC,GADWD,EAAME,MAAM,KACb,IACLC,EAAI,EAAGA,EAAIJ,EAAKE,QAAQG,OAAQD,IACnCA,GAAKJ,EAAKE,QAAQG,OAAS,EAC7BH,GAAWF,EAAKE,QAAQE,GAExBF,GAAWF,EAAKE,QAAQE,GAAK,KAGjC,IAAIE,EAAc,eAACC,EAAA,EAAD,CAAaC,MAAO,CAAC,UAAc,UAAnC,UACE,eAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,iDACsBZ,EAAKa,cAE3B,eAACJ,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,iDACsBZ,EAAKc,aAE3B,eAACL,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,gDACqBZ,EAAKe,iBAE1B,eAACN,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,sCACWZ,EAAK,cAEhB,eAACS,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,gDACoB,cAAC,IAAD,CACFI,MAAOhB,EAAKiB,cACZC,KAAM,GACNC,QAAS,EACTC,KAAK,eAGvB,eAACX,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,mDACwBZ,EAAKqB,mBAG3CC,EAAiBhB,EACjBL,EAAMI,OAAS,IACjBiB,EAAiB,cAAC,IAAD,CAECC,MAAO,EACPC,KAAK,YACLC,KAAK,YACLC,UAAU,cACVC,YAAY,sBACZ7B,UAAU,EACV8B,MAAO,EARR,SAUG,mBAAGC,KAAK,uDAAR,SACF,cAAC,IAAD,CACAC,mBAAmB,qBACnBC,YAAarC,EACbsC,YAAY,EACZC,gBAAiBhC,QAK1BA,EAAMI,QAAU,KAAOJ,EAAMI,OAAS,IAC/CiB,EAAiB,mBAAGO,KAAK,uDAAR,SACC,cAAC,IAAD,CACAC,mBAAmB,qBACnBC,YAAarC,EACbsC,YAAY,EACZC,gBAAiBhC,OAYvC,OAEE,eAACiC,EAAA,EAAD,CAAMR,UAAW/B,EAAQzB,KAAzB,UACE,cAACiE,EAAA,EAAD,CACET,UAAW/B,EAAQpB,MADrB,SAGE,qBAAK6D,IAAKpC,EAAKqC,UAAW7B,MAAO,CAAC,aAAe,OAAQ,YAAc,OACvE,OAAW,oBAAqB,gBAAkB,aAEpD,sBAAKkB,UAAW/B,EAAQf,QAAxB,UAEE,eAAC2B,EAAA,EAAD,CAAamB,UAAW/B,EAAQb,QAAhC,UACE,cAAC2B,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,KAAnC,SACGZ,EAAKsC,QAER,cAAC7B,EAAA,EAAD,CAAYC,cAAY,EAACE,UAAU,KAAnC,SACGV,IAGH,cAACO,EAAA,EAAD,CAAYC,cAAY,EAACE,UAAU,KAAKD,QAAQ,KAAKH,MAAO,CAAC,MAAU,WAAY,aAAc,UAAjG,SAECc,IAGD,cAACiB,EAAA,EAAD,CAAQC,eAAa,EAACtB,KAAK,QAAQuB,MAAM,UAAUC,KAAM1C,EAAK2C,YAAcC,OAAO,SAASpC,MAAO,CAAC,OAAW,UAC7G,cAAiB,OAAQ,gBAAmB,eAD9C,kCAIA,oBAAKA,MAAO,CACViC,MAAO,YACPI,MAAO,OACPjB,MAAO,aAGT3B,EAAMI,OAAS,EAAK,cAACyC,EAAA,EAAD,CAClBpB,UAAWqB,YAAKpD,EAAQZ,OAAT,eACZY,EAAQJ,WAAaO,IAExBkD,QA7CgB,WACxBjD,GAAaD,IA6CLmD,gBAAenD,EACfoD,aAAW,YANO,SAQlB,cAAC,IAAD,MACY,GAEdjD,EAAMI,OAAS,EAGf,cAAC8C,EAAA,EAAD,CAAUC,GAAItD,EAAUuD,QAAQ,OAAOC,eAAa,EAApD,SACIrD,EAAMI,OAAS,EAAKC,EAAc,KAGtC,S,+BC1KG,SAASiD,EAAT,GAA6C,IAAxBC,EAAuB,EAAvBA,QAAS9D,EAAc,EAAdA,YAAc,EAE3BG,mBAAS,CAC/B4D,KAAO,GACP/D,YAAc,GACdgE,OAAS,EACTC,eAAgB,GAChBC,MAAM,IAP2C,mBAE9CC,EAF8C,KAEvCC,EAFuC,KAWnDC,QAAQC,IAAI,wBAGZC,qBAAU,YACM,uCAAG,sBAAAC,EAAA,sDACfH,QAAQC,IAAI,mBACZF,EAAS,2BAAID,GAAL,IAAYJ,KAAKD,EAAS9D,YAAcA,KAFjC,2CAAH,qDAIdyE,KACA,IAGF,IAsBIC,EAtBEC,EAAwB,SAACX,GAC7BI,EAAS,2BAAID,GAAL,IAAWH,OAAOA,MAWtBY,EAAY,SAACC,EAAOC,GACxB,OAAOD,EAAMX,MAAK,SAASM,EAAGO,GAC1B,IAAIC,EAAIR,EAAEM,GACNG,EAAIF,EAAED,GACV,OAASE,EAAIC,EAAK,EAAMD,EAAIC,GAAM,EAAI,MAKxCtE,EAASuE,OAAOC,KAAKhB,EAAMJ,MAAMpD,OASrC,OANE+D,EADE/D,EAASyE,OAAOjB,EAAMF,iBAAmB,EACnCoB,KAAKC,MAAM3E,EAAOyE,OAAOjB,EAAMF,iBAE/BoB,KAAKC,MAAM3E,EAAOyE,OAAOjB,EAAMF,iBAAmB,EAC5DI,QAAQC,IAAI,aAAaI,GAIzB,cAACa,EAAA,EAAD,CAAMC,WAAS,EACfxD,UAAU,iBACVP,QAAS,EACRgE,QAAQ,SACRC,WAAW,SAJZ,SAOE,eAACH,EAAA,EAAD,CACEI,MAAI,EACJ3D,UAAU,mBACV4D,GAAI,EAHN,UAMGjF,EAAQ,GACT,eAAC4E,EAAA,EAAD,CAAMC,WAAS,EAAC/D,QAAS,EAAzB,UACCd,EAAQwD,EAAMF,gBACb,cAACsB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CACAnB,MAAOA,EACPoB,KAAM3B,EAAMH,OACZ+B,SAAU,SAACC,EAAGhC,GAAJ,OAAeW,EAAsBX,QAInD,cAACuB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAACK,EAAA,EAAD,CACAC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASjC,EAAMD,KAAM6B,SAAU,SAAAC,GAAC,OArDtC,SAACK,GAClBhC,QAAQC,IAAI,QACZ,IAAIgC,EAAMnC,EAAMJ,KAChBuC,EAAM1B,EAAU0B,EAAI,iBACpBlC,EAAS,2BAAID,GAAL,IAAWD,KAAKmC,EAAMtC,KAAKuC,EAAIC,SAAQ,KAC/ClC,QAAQC,IAAI,iBAAiBH,EAAMJ,MAgDwByC,CAAWR,EAAE9C,OAAOkD,UAAUK,KAAK,OAAO1D,MAAM,YACrG2D,MAAM,iBACNC,eAAe,aAOjBxC,EAAMJ,KAAK6C,OACXzC,EAAMH,OAAQ,GAAIG,EAAMF,gBACvBE,EAAMH,OAAO,GAAGG,EAAMF,eAAiBmB,OAAOjB,EAAMF,iBAAiB4C,QAAO,SAACvG,GAC1E,OAAqB,MAAdA,EAAKsC,SACbkE,KAAI,SAACxG,EAAKyG,GAAN,OACH,cAACjH,EAAD,CAAW6F,MAAI,EAAW5F,UAAWO,EAAMN,YAAamE,EAAMnE,aAAzC+G,MAI1BpG,EAAQwD,EAAMF,gBACd,cAAC4B,EAAA,EAAD,CACAnB,MAAOA,EACPoB,KAAM3B,EAAMH,OACZ+B,SAAU,SAACC,EAAGhC,GAAJ,OAAeW,EAAsBX,WC3F5D,ICvBA,IAAMgD,EAAQC,EAAQ,IAChBC,EAAU,8BAwBDC,EAtBO,uCAAG,WAAMC,EAAUC,GAAhB,SAAA7C,EAAA,6DACrBH,QAAQC,IAAI,mBAAmB4C,EAAUE,GADpB,kBAEdJ,EAAMM,KAAKJ,EAAUE,EAAS,CACjC7G,MAAO8G,EAAO9G,MACdgH,OAAQF,EAAOE,OACfC,UAAWH,EAAOG,UAClBC,MAAOJ,EAAOI,MACdC,OAAQL,EAAOK,OACfC,SAAUN,EAAOM,SACjBC,UAAWP,EAAOO,UAClBC,aAAc,SAEjBC,MAAK,SAAAC,GAEF,OADA1D,QAAQC,IAAI,sBAAwB0D,KAAKC,UAAUF,IAC5CA,EAAShE,QAGnBmE,OAAM,SAAAC,GACH,MAAMA,MAlBW,2CAAH,wD,sDDWhB9J,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC6J,YAAa,CAETrJ,SAAU,SAKdsJ,EAAQ,GACJ3H,EAAI,KAAMA,EAAG,KAAMA,IACzB2H,EAAMC,KAAK5H,GAIb,IAAI6H,EAAS,CAAC,UAAU,4BAA4B,mBAAmB,SAAS,sBAChF,aAAa,yBAAyB,aAAa,2BAiMpCC,GA/LQC,sBAAW,SAACC,EAAMC,GACrC,IAAM1I,EAAU5B,IAEVmC,EAAUkI,EAAMlI,QAChBoI,EAAcF,EAAME,YAJmB,EAMnBzI,mBAAS,CAC7B0I,YAAa,EACbtB,OAAS,GACTC,UAAW,GACXC,MAAO,GACPE,SAAS,KACTD,OAAS,KACTE,UAAW,IAb4B,mBAMtCzD,EANsC,KAM/BC,EAN+B,KAkBvC0E,EAAe,SAACC,EAAM1C,GACxBhC,QAAQC,IAAI,QAAQyE,GACpB1E,QAAQC,IAAI,QAAQ+B,GAIpBjC,EAAS,2BAAID,GAAL,kBAAY4E,EAAO1C,KAG3BqC,EAAMI,aAAaC,EAAM1C,IAIvB2C,EAAY,WAChB5E,EAAS,2BAAID,GAAL,IAAYoD,OAAO,GAAGC,UAAU,GAAGC,MAAM,GAAGE,SAAS,KAAKD,OAAS,SAW7E,OAPAuB,8BAAoBN,GAAK,WACvB,MAAO,CACLK,YAAaA,MAMjB,qCAEK,cAACzD,EAAA,EAAD,CAAMC,WAAS,EAAf,SACA,cAACS,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASjC,EAAM0E,WAAY9C,SAAU,SAAAC,GAAC,OAAI8C,EAAa,aAAc9C,EAAE9C,OAAOkD,UAAUK,KAAK,aAAa1D,MAAM,YACjI2D,MAAM,kBAIV,eAACnB,EAAA,EAAD,CAAMC,WAAS,EAAC/D,QAAS,EAAzB,UAGE,eAAC8D,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACC,GAAI,GAAInE,QAAS,EAAtC,UACI,cAAC8D,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACC,GAAI,EAAzB,SACA,cAACsD,EAAA,EAAD,CACCC,GAAG,oBACHC,QAASR,EACTS,eAAgB,SAACC,GAAD,OAAgBA,EAAWA,YAC3CxI,MAAO,CAAEoB,MAAO,KAChBqH,YAAa,SAAClC,GAAD,OAAY,cAACmC,EAAA,EAAD,2BAAenC,GAAf,IAAuBX,MAAM,iBACtDX,SAAU,SAAC0D,EAAOC,GAAR,OAAqBZ,EAAa,YAAaY,EAAWA,EAASJ,WAAaI,QAgB5F,cAACnE,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACC,GAAI,EAAzB,SACA,cAACsD,EAAA,EAAD,CACEC,GAAG,gBACHC,QAAS5I,EACT6I,eAAgB,SAAC9B,GAAD,OAAYA,EAAOd,MACnC3F,MAAO,CAAEoB,MAAO,KAChBqH,YAAa,SAAClC,GAAD,OAAY,cAACmC,EAAA,EAAD,2BAAenC,GAAf,IAAuBX,MAAM,aACtDX,SAAU,SAAC0D,EAAOC,GAAR,OAAqBZ,EAAa,SAAUY,EAAWA,EAASjD,KAAOiD,QAapF,cAACnE,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACC,GAAI,EAAzB,SACE,eAAC+D,EAAA,EAAD,CAAa3H,UAAW/B,EAAQmI,YAAhC,UACI,cAACwB,EAAA,EAAD,CAAYT,GAAG,QAAf,mBACA,cAACU,EAAA,EAAD,CACEC,QAAQ,eACRX,GAAG,eAEH9C,MAAOlC,EAAMsD,MACb1B,SAAU,SAAAC,GAAC,OAAG8C,EAAa,QAAS9C,EAAE9C,OAAOmD,QAL/C,SAOGkC,EAAOzB,KAAI,SAACW,GAAD,OACA,cAACsC,EAAA,EAAD,CAAsB1D,MAAOoB,EAA7B,SACGA,GADYA,gBAUrC,eAAClC,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACC,GAAI,GAAInE,QAAS,EAAtC,UAGE,cAAC8D,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACC,GAAI,EAAzB,SACE,eAAC+D,EAAA,EAAD,CAAa3H,UAAW/B,EAAQmI,YAAhC,UACI,cAACwB,EAAA,EAAD,CAAYT,GAAG,YAAf,uBACA,cAACU,EAAA,EAAD,CACEC,QAAQ,mBACRX,GAAG,mBAIH9C,MAAOlC,EAAMwD,SACb5B,SAAU,SAAAC,GAAC,OAAI8C,EAAa,WAAY9C,EAAE9C,OAAOmD,QAPnD,SASGgC,EAAMvB,KAAI,SAACL,GAAD,OACC,cAACsD,EAAA,EAAD,CAAqB1D,MAAOI,EAA5B,SACGA,GADYA,aAQnC,cAAClB,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACC,GAAI,EAAzB,SACE,eAAC+D,EAAA,EAAD,CAAa3H,UAAW/B,EAAQmI,YAAhC,UACI,cAACwB,EAAA,EAAD,CAAYT,GAAG,UAAf,qBACA,cAACU,EAAA,EAAD,CACEC,QAAQ,iBACRX,GAAG,iBAIH9C,MAAOlC,EAAMuD,OACb3B,SAAU,SAAAC,GAAC,OAAI8C,EAAa,SAAU9C,EAAE9C,OAAOmD,QAPjD,SASGgC,EAAMvB,KAAI,SAACL,GAAD,OACC,cAACsD,EAAA,EAAD,CAAqB1D,MAAOI,EAA5B,SACGA,GADYA,aAQnC,cAAClB,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACC,GAAI,EAAzB,SACE,eAAC+D,EAAA,EAAD,CAAa3H,UAAW/B,EAAQmI,YAAhC,UACI,cAACwB,EAAA,EAAD,CAAYT,GAAG,SAAf,yBACA,cAACU,EAAA,EAAD,CACEC,QAAQ,gBACRX,GAAG,gBAEH9C,MAAOlC,EAAMyD,UACb7B,SAAU,SAAAC,GAAC,OAAG8C,EAAa,YAAa9C,EAAE9C,OAAOmD,QALnD,SAOG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGS,KAAI,SAACkD,GAAD,OACL,cAACD,EAAA,EAAD,CAAuB1D,MAAO2D,EAA9B,SACGA,GADYA,yBExMxChD,GAAQC,EAAQ,IAEhB5I,GAAYC,aAAW,SAACC,GAAD,MAAY,CAEnC0L,YAAa,CACXC,gBAAiB3L,EAAM4L,QAAQC,WAAWC,MAC1CrL,QAAST,EAAMkD,QAAQ,EAAG,EAAG,IAE/B6I,YAAa,CACX5L,UAAWH,EAAMkD,QAAQ,IAE3B8I,OAAQ,CACNA,OAAQhM,EAAMkD,QAAQ,QAMf,SAAS+I,GAAU9B,GAC9B,IAAMzI,EAAU5B,KADqB,EAGX8B,mBAAS,CAC/BI,MAAM,GACNsI,YAAa,EACbtB,OAAS,GACTC,UAAW,GACXC,MAAO,GACPC,OAAS,KACTC,SAAU,KACVC,UAAU,EACV6C,WAAY,KAZqB,mBAG9BtG,EAH8B,KAGvBC,EAHuB,KAgB/BuE,EAAM+B,iBAAO,MAgDnB,OACA,mCACI,qBAAK1I,UAAW/B,EAAQgK,YAAxB,SACE,eAACU,EAAA,EAAD,CAAW7L,SAAS,KAApB,UACE,cAACiC,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKkC,MAAM,SAASJ,MAAM,cAAc/B,cAAY,EAAvF,sCAKA,cAACwI,EAAA,EAAD,CACAoB,WAAS,EACT5I,UAAW/B,EAAQsK,OACnB7D,MAAM,qBACNmE,WAAS,EACTC,QAAS,EACTzE,MAAOlC,EAAM5D,MACbwF,SA7Da,SAAC0D,GACpBrF,EAAS,2BAAID,GAAL,IAAW5D,MAAOkJ,EAAMvG,OAAOmD,SAEvCW,GAAMM,KAAK,yCAA8C,CACvDyD,YAAatB,EAAMvG,OAAOmD,QACzByB,MAAK,SAAAkD,GACJA,EAAG,KAAH,kBACF5G,EAAS,2BAAID,GAAL,IAAWsG,WAAYO,EAAG,KAAH,eAA+BzK,MAAOkJ,EAAMvG,OAAOmD,SAElFjC,EAAS,2BAAID,GAAL,IAAWsG,WAAY,GAAIlK,MAAOkJ,EAAMvG,OAAOmD,YAEtD6B,OAAM,SAAA+C,GACT5G,QAAQC,IAAI,gCAAkC2G,SAoDxC,cAAClK,EAAA,EAAD,CAAYE,QAAQ,KAAKkC,MAAM,SAASJ,MAAM,gBAAgBmI,WAAS,EAACpK,MAAO,CAAC,UAAc,SAAU,OAAW,WAAYwC,QAnC7G,WACxBc,EAAS,2BAAID,GAAL,IAAY5D,MAAO4D,EAAMsG,WAAYA,WAAY,OAkCnD,SAC8B,GAA3BtG,EAAMsG,WAAW9J,OAAc,iBAAmBwD,EAAMsG,WAAa,KAAM,KAG9E,cAAC1J,EAAA,EAAD,CAAYE,QAAQ,KAAKkC,MAAM,SAASJ,MAAM,gBAAgBmI,WAAS,EAAC7E,MAAO,KAA/E,wFAKA,cAAC,GAAD,CAAgBsC,IAAMA,EAAKG,aAxDA,SAACqC,EAAM9E,GACtCjC,EAAS,2BAAID,GAAL,kBAAagH,EAAO9E,KAC5BhC,QAAQC,IAAI,yBAAyB6G,EAAM9E,IAsDiC7F,QAASkI,EAAMlI,QAASoI,YAAaF,EAAME,cAGnH,qBAAK5G,UAAW/B,EAAQqK,YAAxB,SACE,eAAC/E,EAAA,EAAD,CAAMC,WAAS,EAAC/D,QAAS,EAAGgE,QAAQ,SAApC,UACE,cAACF,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC9C,EAAA,EAAD,CAAQ5B,QAAQ,YAAY8B,MAAM,UAAUO,QA7CrC,WAMjBoF,EAAM0C,cAAcjH,IAuCV,sBAIF,cAACoB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC9C,EAAA,EAAD,CAAQ5B,QAAQ,WAAW8B,MAAM,UAAUO,QA9DvC,SAACmG,GACfA,EAAM4B,iBACNjH,EAAS,2BAAID,GAAL,IAAY5D,MAAM,GAAG+K,YAAY,GAAGC,SAAU,KACtD5C,EAAI6C,QAAQxC,eA2DF,iCCjIlB,IAAMhC,GAAQC,EAAQ,IAiBPwE,GAbI,uCAAG,sBAAAjH,EAAA,+EACXwC,GAAMM,KAHK,8CAGc,CAC5BO,aAAc,SAEjBC,MAAK,SAAAC,GAEF,OADA1D,QAAQC,IAAI,sBAAwB0D,KAAKC,UAAUF,IAC5CA,EAAShE,QAEnBmE,OAAM,SAAAC,GACH,MAAMA,MATQ,2CAAH,qDCJbnB,GAAQC,EAAQ,IAiBPyE,GAbO,uCAAG,sBAAAlH,EAAA,+EACdwC,GAAMM,KAHQ,kDAGc,CAC/BO,aAAc,SAEjBC,MAAK,SAAAC,GAEF,OADA1D,QAAQC,IAAI,sBAAwB0D,KAAKC,UAAUF,IAC5CA,EAAShE,QAEnBmE,OAAM,SAAAC,GACH,MAAMA,MATW,2CAAH,qDCehB9J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoN,KAAM,CACJC,YAAarN,EAAMkD,QAAQ,IAE7BoK,SAAU,CACRC,WAAYvN,EAAMkD,QAAQ,GAC1BsK,cAAexN,EAAMkD,QAAQ,IAE/BuK,OAAQ,CACN9B,gBAAiB3L,EAAM4L,QAAQC,WAAWC,MAC1CrL,QAAST,EAAMkD,QAAQ,IAEzB8I,OAAQ,CACNA,OAAQhM,EAAMkD,QAAQ,IAExB2G,YAAa,CACXmC,OAAQhM,EAAMkD,QAAQ,GACtB1C,SAAU,SAYC,SAASkN,KACtB,IAAMhM,EAAU5B,KADmB,EAGT8B,mBAAS,CACjCmL,YAAa,CACXY,MAAM,IAERlM,YAAc,GACdmM,WAAY,EACZC,YAAW,EACXC,SAAS,GACTd,SAAS,EACT/K,QAAU,GACVoI,YAAc,KAbmB,mBAG5BzE,EAH4B,KAGrBC,EAHqB,KAgBnCC,QAAQC,IAAI,sBAIZC,qBAAU,WACRF,QAAQC,IAAI,4BACkB,uCAAG,8BAAAE,EAAA,6DACzBhE,EAAU,GACVoI,EAAc,GAFW,SAGvB6C,KACH3D,MAAK,SAAAC,GAEJvH,EAAUuH,EAASvH,WAEpB0H,OAAM,SAAAoE,GACLjI,QAAQC,IAAI,iBAAiBgI,MATJ,uBAYrBZ,KACL5D,MAAK,SAAAC,GAEJa,EAAcb,EAASa,eAExBV,OAAM,SAAAoE,GACLjI,QAAQC,IAAI,iBAAiBgI,MAlBJ,OAqB3BlI,EAAS,2BACFD,GADC,IAEJyE,YAAaA,EACbpI,QAAQA,KAxBe,2CAAH,oDA8B5B+L,KAEC,IAOL,IAAMnB,EAAa,uCAAG,WAAOoB,GAAP,6BAAAhI,EAAA,6DAGlBjE,EAOaiM,EAPbjM,MACAsI,EAMa2D,EANb3D,WACAtB,EAKaiF,EALbjF,OACAC,EAIagF,EAJbhF,UACAC,EAGa+E,EAHb/E,MACAE,EAEa6E,EAFb7E,SACAD,EACa8E,EADb9E,OACAE,EAAa4E,EAAb5E,UAGFxD,EAAS,2BAAKD,GAAN,IAAagI,WAAW,EAAMM,aAAc,GAAInB,YAAa,MACrEjH,QAAQC,IAAIH,EAAMgI,WAdE,SAiBdhF,EACJ0B,EAAa,gBAAkB,iBAE/B,CAACtI,QAAOgH,SAAQC,YAAWC,QAAOE,WAAUD,SAAQE,cAEjDE,MAAK,SAAAC,GAEF3D,EAAS,2BACFD,GADC,IAEJgI,WAAW,EACXb,YAAa,CACXY,MAAQnE,EAASmE,OACnBO,aAAc,GACdlB,SAAQ,EACRa,YAAY,EACZpM,YAAY+H,EAAS/H,kBAG5BkI,OAAM,SAAAoE,GACHlI,EAAS,2BACFD,GADC,IAEJgI,WAAW,EACXZ,SAAU,EACVa,YAAY,EACZC,SAAUC,EACVhB,YAAa,CACX/K,MAAM,UA3CA,2CAAH,sDAiDnB,OACE,eAAC,IAAMmM,SAAP,WACE,cAACC,EAAA,EAAD,IASA,iCAEE,cAACnC,GAAD,CAAWY,cAAeA,EAAgB5K,QAAS2D,EAAM3D,QAASoI,YAAazE,EAAMyE,cAGrF,eAAC+B,EAAA,EAAD,CAAW3I,UAAW/B,EAAQ4L,SAAU/M,SAAS,KAAjD,UAEGqF,EAAMgI,UACH,cAAC5G,EAAA,EAAD,CAAMC,WAAS,EAEhBC,QAAQ,SACRC,WAAW,SAHV,SAKF,cAACkH,EAAA,EAAD,MAGAzI,EAAMoH,UACLpH,EAAMmH,YAAYY,MAAMvL,OAAO,EAC5B,cAACkD,EAAD,CAAYC,QAASK,EAAMmH,YAAYY,MAAOlM,YAAamE,EAAMnE,cAChE,cAACe,EAAA,EAAD,CAAYE,QAAQ,KAAKkC,MAAM,SAASJ,MAAM,UAAUf,UAAU,gBAAlE,SAAmF,oDAGzFmC,EAAMiI,YAAc,cAACrL,EAAA,EAAD,CAAYE,QAAQ,KAAKkC,MAAM,SAASJ,MAAM,QAAQf,UAAU,gBAAhE,qEAAsImC,EAAMkI,kBAKrK,yBAAQrK,UAAW/B,EAAQ+L,OAA3B,UACE,cAACjL,EAAA,EAAD,CAAYE,QAAQ,KAAKkC,MAAM,SAASnC,cAAY,EAApD,oBAGA,cAACD,EAAA,EAAD,CAAYE,QAAQ,YAAYkC,MAAM,SAASJ,MAAM,gBAAgB7B,UAAU,IAA/E,gECxMM+F,EAAQ,ICARA,EAAQ,IC+CP4F,OAzCf,WAAe,IAAD,EACgB1M,mBAAS,CAC/B2M,UAAU,CACNX,WAAU,EACVhE,MAAM,MAJJ,mBAkCV,OAlCU,UAoCN,aADA,CACA,gBACA,cAAC8D,GAAD,OC/BOc,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnF,MAAK,YAAkD,IAA/CoF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73ee4c8b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Highlighter from \"react-highlight-words\";\nimport ShowMoreText from 'react-show-more-text';\nimport Stars from 'react-stars-display';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginTop: '5%',\n    marginBottom: '5%',\n    border: '0.2em solid lightgrey'\n  },\n  cover: {\n    maxWidth: 120,\n    minWidth: 120,\n    padding: 7,\n    objectFit: 'cover',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: '75%'\n  },\n  content: {\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  }\n}));\n\nexport default function BookCard({resultObj, searchTerms}) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    let book  = resultObj;\n    let quote = resultObj.quote ?  resultObj.quote : \"\";\n    let quoteArr = quote.split(\" \");\n    let authors = \"\"\n    for (let i = 0; i < book.authors.length; i++) {\n      if (i == book.authors.length - 1) {\n        authors += book.authors[i]\n      } else {\n        authors += book.authors[i] + \", \"\n      }\n    }\n    let bookDetails = <CardContent style={{\"fontStyle\" : \"italic\"}}>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\"  >\n                        ––– Book categories: {book.categories}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\"  >\n                        ––– Number of pages: {book.pageCount}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\"   >\n                        ––– Published date: {book.publishedDate}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\"   >\n                        ––– ISBN: {book['isbn-13']}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\"   >\n                        ––– Average rating: <Stars\n                                          stars={book.averageRating}\n                                          size={15} //optional\n                                          spacing={2} //optional\n                                          fill='#ea9c46' //optional\n                                          />\n                        </Typography>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\"   >\n                        ––– Number of ratings: {book.ratingsCount}\n                        </Typography>\n                      </CardContent>\n      let displayedQuote = bookDetails \n      if (quote.length > 300) {\n        displayedQuote = <ShowMoreText\n                          /* Default options */\n                          lines={3}\n                          more='Show more'\n                          less='Show less'\n                          className='content-css'\n                          anchorClass='my-anchor-css-class'\n                          expanded={false}\n                          width={0}\n                          >\n                            <q cite=\"https://www.mozilla.org/en-US/about/history/details/\">{\n                          <Highlighter\n                          highlightClassName=\"YourHighlightClass\"\n                          searchWords={searchTerms}\n                          autoEscape={true}\n                          textToHighlight={quote}\n                        >\n                          \n                          </Highlighter>}</q>\n                          </ShowMoreText>\n      } else if (quote.length <= 300 && quote.length > 0) {\n        displayedQuote = <q cite=\"https://www.mozilla.org/en-US/about/history/details/\">{\n                          <Highlighter\n                          highlightClassName=\"YourHighlightClass\"\n                          searchWords={searchTerms}\n                          autoEscape={true}\n                          textToHighlight={quote}\n                          >\n                          </Highlighter>}</q>\n      }\n\n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n\n  \n\n\n    return (\n\n      <Card className={classes.root} >\n        <CardMedia\n          className={classes.cover}\n        >\n          <img src={book.thumbnail} style={{\"max-height\" : \"100%\", \"max-width\" : \"100%\", \n          \"border\" : \"0.2em solid black\", \"border-radius\" : \"0.1em\"}}/>\n        </CardMedia>\n        <div className={classes.details}>\n        \n          <CardContent className={classes.content} >\n            <Typography variant=\"h5\" component=\"h2\">\n              {book.title}\n            </Typography>\n            <Typography gutterBottom component=\"h3\" >\n              {authors}\n            </Typography>\n              \n            <Typography gutterBottom component=\"h4\" variant=\"h6\" style={{\"color\" : \"darkblue\", \"font-style\": \"italic\"}} >\n              \n            {displayedQuote}\n              \n            </Typography>\n            <Button disableRipple size=\"small\" color=\"primary\" href={book.previewLink}  target=\"_blank\" style={{'cursor' : 'pointer',  \n              'textTransform': \"none\", 'backgroundColor': 'transparent'  }}>\n              View on Google Books\n            </Button>\n            <hr  style={{\n              color: 'lightblue',\n              align: 'left',\n              width: '100%'\n            }}/>\n          </CardContent>\n          {(quote.length > 0) ? <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n          </IconButton> : \"\"}\n          \n          {(quote.length > 0) ? \n            \n            \n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              {(quote.length > 0) ? bookDetails : \"\"}\n            </Collapse>\n             :\n            \"\"\n          }\n          \n        </div>\n      </Card>\n\n    )              \n}\n\n","import React, {useState,useEffect} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BookCard from \"../components/BookCard.js\"\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\n\n//  props will be a list of book objects\nexport default function ResultPage({results, searchTerms}) {\n\n      const [state, setState] = useState({\n          data : [],\n          searchTerms : [],\n          offset : 1,\n          perPageResults: 10,\n          sort: false\n\n        });\n\n        console.log(\"Result page rendered\")\n\n        \n        useEffect(() => {\n          const onRender = async () => {\n            console.log(\"Use effect hook\")\n            setState({...state, data:results, searchTerms : searchTerms}) \n            }\n          onRender()\n        },[]);\n\n\n        const handlePaginationClick = (offset) => {\n          setState({...state,offset:offset})\n        }\n\n        const handleSort = (value) => {\n          console.log(\"Sort\")\n          var arr = state.data\n          arr = sortByKey(arr,\"averageRating\")\n          setState({...state,sort:value,data:arr,sorting:false})\n          console.log(\"Sorted results\",state.data)\n        }\n\n        const sortByKey = (array, key) => {\n          return array.sort(function(a, b) {\n              var x = a[key]; \n              var y = b[key];\n              return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n          });\n      }\n\n        // Calculate how many pagination page we will have \n        var length = Object.keys(state.data).length;\n        var count;\n        if (length % Number(state.perPageResults) == 0)\n          count = Math.floor(length/Number(state.perPageResults)) \n        else\n          count = Math.floor(length/Number(state.perPageResults)) + 1\n        console.log(\"Page count\",count)\n\n\n        return (\n        <Grid container \n        className=\"book-container\" \n        spacing={6}\n         justify=\"center\"   \n         alignItems=\"center\" \n         >\n           \n          <Grid \n            item \n            className=\"book-card-result\"\n            xs={8}\n          >\n\n            {length> 0 && ( \n            <Grid container spacing={3}>  \n            {length> state.perPageResults &&\n              <Grid item xs={8} >\n                  <Pagination \n                  count={count} \n                  page={state.offset} \n                  onChange={(e, offset) => handlePaginationClick(offset)} />\n              </Grid>\n              }\n\n              <Grid item xs={2} >\n                <FormControlLabel\n                control={<Switch checked={state.sort} onChange={e => handleSort(e.target.checked)} name=\"sort\" color=\"primary\"/>}\n                label=\"Average Rating\"\n                labelPlacement=\"End\"\n                />\n              </Grid>\n            </Grid>)}\n\n\n\n            { state.data.slice(\n             (state.offset -1 )*state.perPageResults, \n              (state.offset-1)*state.perPageResults + Number(state.perPageResults)).filter((book) => {\n                  return book.title != null;\n              }).map((book,idx) =>\n                  <BookCard  item key={idx} resultObj={book} searchTerms={state.searchTerms} />\n              )\n            }\n\n            {length> state.perPageResults &&\n             <Pagination \n             count={count} \n             page={state.offset} \n             onChange={(e, offset) => handlePaginationClick(offset)} />\n            }\n\n          </Grid>\n        </Grid> \n        \n        )\n};\n\n\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\n\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        // margin: theme.spacing(1),\n        minWidth: 120,\n      },\n  }));\n  \n  \nlet years = []\nfor(var i = 1990; i< 2022; i++){\n  years.push(i)\n}\n\n\nlet genres = ['Fiction','Biography & Autobiography','Juvenile Fiction','Poetry','Young Adult Fiction',\n'Philosophy','Young Adult Nonfiction','True Crime','Indic fiction (English)']\n\nconst SearchFeatures = forwardRef((props,ref) => {\n    const classes = useStyles();\n\n    const authors = props.authors;\n    const book_titles = props.book_titles;\n\n    const [state, setState] = useState({\n          bookSearch : false,\n          author : \"\",\n          bookTitle: \"\",\n          genre: \"\",\n          yearFrom:1990,\n          yearTo : 2021,\n          minRating: 1\n      });\n    \n\n    \n    const handleChange = (field,value) => {\n        console.log(\"Field\",field)\n        console.log(\"Value\",value)\n\n        // TODO \n        // Year has to be checked and error message displayed\n        setState({...state,[field]:value})\n        \n        /* Pass state to parent component  */\n        props.handleChange(field,value)\n    };\n\n    \n    const handleClear=()=> {\n      setState({...state, author:\"\",bookTitle:\"\",genre:\"\",yearFrom:1990,yearTo : 2021})\n    }\n\n\n    useImperativeHandle(ref, () => {\n      return {\n        handleClear: handleClear\n      };\n    });\n\n\n    return(\n    <>\n         {/* Extra search features */}\n         <Grid container>  \n         <FormControlLabel\n           control={<Switch checked={state.bookSearch} onChange={e => handleChange('bookSearch', e.target.checked)} name=\"bookSearch\" color=\"primary\"/>}\n           label=\"Book Search\"\n         />\n       </Grid>\n\n       <Grid container spacing={1}>\n\n         {/* First row of advance Search */}\n         <Grid container item xs={12} spacing={3}>\n             <Grid container item xs={4} >\n             <Autocomplete\n              id=\"book-title-select\"\n              options={book_titles}\n              getOptionLabel={(book_title) => book_title.book_title}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Book Title\" />}\n              onChange={(event, newValue) => handleChange('bookTitle', newValue ? newValue.book_title : newValue )}\n            />\n            </Grid>\n           {/*<Grid container item xs={4} >*/}\n           {/*  <TextField */}\n           {/*  id=\"standard-basic\" label=\"Book Title\" */}\n           {/*  value={state.bookTitle}*/}\n           {/*  onChange={e => handleChange('bookTitle', e.target.value)} /> */}\n           {/* </Grid>*/}\n{/*             \n           <Grid container item xs={4} >\n             <TextField \n             id=\"standard-basic\" label=\"Author\" \n             value={state.author}\n             onChange={e => handleChange('author', e.target.value)} />  \n            </Grid> */}\n            <Grid container item xs={4} >\n            <Autocomplete\n              id=\"author-select\"\n              options={authors}\n              getOptionLabel={(author) => author.name}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Author\" />}\n              onChange={(event, newValue) => handleChange('author', newValue ? newValue.name : newValue)}  \n\n            />\n            </Grid>\n            \n\n           {/* <Grid container item xs={4} >\n             <TextField \n             id=\"standard-basic\" label=\"Genre\" \n             value={state.genre}\n             onChange={e => handleChange('genre', e.target.value)} />  \n           </Grid>    */}\n\n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"genre\">Genre</InputLabel>\n                 <Select\n                   labelId=\"genre-selcet\"\n                   id=\"genre-select\"\n\n                   value={state.genre}\n                   onChange={e =>handleChange('genre', e.target.value)}\n                 >\n                   {genres.map((genre) => (\n                               <MenuItem key={genre} value={genre} >\n                                 {genre}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>        \n         </Grid>\n         \n         {/* Second row of advance Search */}\n         <Grid container item xs={12} spacing={3}>\n\n         \n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"year-from\">Year From</InputLabel>\n                 <Select\n                   labelId=\"year-from-select\"\n                   id=\"year-from-select\"\n                   // open={open}\n                   // onClose={handleClose}\n                   // onOpen={handleOpen}\n                   value={state.yearFrom}\n                   onChange={e => handleChange('yearFrom', e.target.value)}\n                 >\n                   {years.map((name) => (\n                               <MenuItem key={name} value={name} >\n                                 {name}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>\n\n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"year-to\">Year To</InputLabel>\n                 <Select\n                   labelId=\"year-to-select\"\n                   id=\"year-to-select\"\n                   // open={open}\n                   // onClose={handleClose}\n                   // onOpen={handleOpen}\n                   value={state.yearTo}\n                   onChange={e => handleChange('yearTo', e.target.value)}\n                 >\n                   {years.map((name) => (\n                               <MenuItem key={name} value={name} >\n                                 {name}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>\n\n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"rating\">Min. Rating</InputLabel>\n                 <Select\n                   labelId=\"rating-selcet\"\n                   id=\"rating-select\"\n\n                   value={state.minRating}\n                   onChange={e =>handleChange('minRating', e.target.value)}\n                 >\n                   {[1,2,3,4,5].map((rating) => (\n                               <MenuItem key={rating} value={rating} >\n                                 {rating}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>    \n\n         </Grid>\n       </Grid>\n    </>\n    )\n\n});\nexport default SearchFeatures;\n","const axios = require('axios');\nconst baseURL = 'http://188.166.173.191:5000';\n\nconst getSearchResults = async(endpoint, params) => {\n    console.log(\"request endpoint\",baseURL + endpoint)\n    return axios.post(baseURL + endpoint,{\n        quote: params.quote,\n        author: params.author ,\n        bookTitle: params.bookTitle, \n        genre: params.genre, \n        yearTo: params.yearTo, \n        yearFrom: params.yearFrom,\n        minRating: params.minRating,\n        responseType: 'json'\n    })\n    .then(response => {\n        console.log(\"res in callAPI is: \" + JSON.stringify(response));\n        return response.data;\n        // throw Error(\"This is an error message\")\n      })\n    .catch(error => {\n        throw error;\n    });   \n}\n\nexport default getSearchResults;\n\n\n","import React ,{useState,useRef} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport SearchFeatures from \"./SearchFeatures.js\";\nconst axios = require('axios');\n\nconst useStyles = makeStyles((theme) => ({\n\n      heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n      },\n      heroButtons: {\n        marginTop: theme.spacing(4),\n      },\n      margin: {\n        margin: theme.spacing(1),\n      },\n  }));\n  \n\n\nexport default function SearchBar(props) {\n    const classes = useStyles();\n\n    const [state, setState] = useState({\n        quote:\"\",\n        bookSearch : false,\n        author : \"\",\n        bookTitle: \"\",\n        genre: \"\",\n        yearTo : 2021,\n        yearFrom: 1990,\n        minRating:1,\n        correction: \"\"\n    });\n\n\n    const ref = useRef(null);\n\n\n    const handleChange = (event) => {\n      setState({...state,quote: event.target.value})\n      // Spellcheck\n      axios.post('http://188.166.173.191:5000' + '/spellcheck',{\n        search_text: event.target.value\n      }).then(res => {\n      if (res['data']['correction_exists']) {\n        setState({...state,correction: res['data']['corrected_text'], quote: event.target.value})\n      } else {\n        setState({...state,correction: \"\", quote: event.target.value})\n      }\n      }).catch(err => {\n      console.log(\"ERROR RETRIEVING CORRECTION: \" + err)\n      });\n        \n    };\n    \n    const handleSearchFeaturesChange = (param,value) =>{\n        setState({...state, [param]:value});\n        console.log(\"Search features input:\",param,value);\n    }\n    \n    const handleClear=(event)=> {\n        event.preventDefault();\n        setState({...state, quote:\"\",apiResponse:{},success : false})\n        ref.current.handleClear();\n\n    }\n\n    const handleSpellCorrect= () => {\n      setState({...state, quote: state.correction, correction: \"\"})\n    }\n\n    \n    const handleSubmit = () =>{\n        // Validate input \n        // If input is correct then make the request otherwise change state\n        // and display appropriate component\n        // findQuoteRequest();\n\n        props.handleRequest(state)\n        \n    }\n\n    \n    return(\n    <>\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Search a book by a quote\n            </Typography>\n           \n           {/* Search Bar */}\n            <TextField \n            fullWidth \n            className={classes.margin} \n            label=\"Type your quote...\"\n            multiline\n            rowsMax={4}\n            value={state.quote}\n            onChange={handleChange}\n            ></TextField>\n\n            <Typography variant=\"h7\" align=\"center\" color=\"textSecondary\" paragraph style={{\"fontStyle\" : \"italic\", \"cursor\" : \"pointer\"}} onClick={handleSpellCorrect}>\n              {state.correction.length != 0 ? \"Did you mean '\" + state.correction + \"'?\": \"\"}\n            </Typography>\n\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph value={\"hi\"}>\n              Try to type something short and leading about the book you are looking for\n            </Typography>\n\n            {/* Search features component  */}\n            <SearchFeatures ref= {ref} handleChange = {handleSearchFeaturesChange}  authors={props.authors} book_titles={props.book_titles} />\n\n            {/* Buttons */}\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n                    Submit\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" onClick={handleClear}>\n                    Clear\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        \n    </>\n    )\n\n}\n\n","const axios = require('axios');\n// const findQuoteURL = 'http://localhost:9000/findQuote';\nconst getAuthorsURL = 'http://188.166.173.191:5000/get_all_authors';\n\nconst getAllAuthors = async() => {\n    return axios.post(getAuthorsURL,{\n        responseType: 'json'\n    })\n    .then(response => {\n        console.log(\"res in callAPI is: \" + JSON.stringify(response));\n        return response.data;\n      })\n    .catch(error => {\n        throw error;\n    });   \n}\n\nexport default getAllAuthors;\n\n\n","const axios = require('axios');\n// const findQuoteURL = 'http://localhost:9000/findQuote';\nconst getBookTitlesURL = 'http://188.166.173.191:5000/get_all_book_titles';\n\nconst getAllBookTitles = async() => {\n    return axios.post(getBookTitlesURL,{\n        responseType: 'json'\n    })\n    .then(response => {\n        console.log(\"res in callAPI is: \" + JSON.stringify(response));\n        return response.data;\n      })\n    .catch(error => {\n        throw error;\n    });\n}\n\nexport default getAllBookTitles;\n\n\n","import React, {useState,useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport BookIcon from '@material-ui/icons/Book';\nimport Grid from '@material-ui/core/Grid';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport ResultPage from \"./ResultPage.js\"\nimport getSearchResults from \"../api/getSearchResults.js\";\nimport SearchBar from \"../components/SearchBar.js\";\nimport getAllAuthors from \"../api/getAllAuthors.js\"\nimport getAllBookTitles from \"../api/getAllBookTitles\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n\n}));\n\nlet dummy_authors = [{name:\"Janish\"}\n,{name:\"Harry poppins\"},\n{name:\"Anna michin\"},\n{name:\"Mike\"},\n{name:\"Joah noah\"},\n{name:\"Michelin\"}]\n\nexport default function SearchPage() {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    apiResponse: {\n      books:[]\n    } , \n    searchTerms : [],\n    isLoading : false,\n    errorOccur:false,\n    errorMsg:\"\",\n    success: false,\n    authors : [],\n    book_titles : []\n  });\n\n  console.log(\"Search page render\")\n\n\n  // Use effect hook that will be triggered once, on render, to fetch the Author names\n  useEffect(() => {\n    console.log(\"Hook to get author names\")\n      const getAuthorsandBookNames = async () => {\n        let authors = []\n        let book_titles = []\n        await getAllAuthors()\n          .then(response => {\n            // console.log(\"repsonse within author hook\",response);\n            authors = response.authors\n          })\n          .catch(errorResponse => {\n            console.log(\"Error response\",errorResponse)\n          });\n\n          await getAllBookTitles()\n          .then(response => {\n            // console.log(\"repsonse within book hook\",response);\n            book_titles = response.book_titles\n          })\n          .catch(errorResponse => {\n            console.log(\"Error response\",errorResponse)\n          });\n\n          setState({\n              ...state,\n              book_titles: book_titles,\n              authors:authors\n          })\n      };\n\n    \n\n      getAuthorsandBookNames();\n\n    }, []); // empty list of dependencies ensures the hooks is only called upon rendering of the component\n\n\n/* \nSingle handleRequest function that will trigger the proper API function based on the\ntype of search \n */\n  const handleRequest = async (searchInput) => {\n\n    let {\n      quote, \n      bookSearch,\n      author ,\n      bookTitle,\n      genre,\n      yearFrom,\n      yearTo,\n      minRating} = searchInput\n\n\n    setState({ ...state, isLoading: true, requestError: \"\", apiResponse: \"\" });\n    console.log(state.isLoading)\n    \n    \n    await getSearchResults(\n      bookSearch ? \"/books_search\" : \"/quotes_search\",\n\n      {quote, author ,bookTitle, genre, yearFrom, yearTo, minRating}\n      )\n        .then(response => {\n            // console.log(\"res in setAPIResponse: \" + JSON.stringify(response));\n            setState({\n                ...state,\n                isLoading: false,\n                apiResponse: {\n                  books : response.books}, // book object, might contain quote as well \n                requestError: \"\",\n                success:true,\n                errorOccur: false,\n                searchTerms:response.searchTerms\n            });\n        })\n        .catch(errorResponse => {\n            setState({\n                ...state,\n                isLoading: false,\n                success : false,\n                errorOccur: true,\n                errorMsg: errorResponse,\n                apiResponse: {\n                  quote:\"\"\n                }\n            });\n        });        \n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      {/* <AppBar position=\"relative\">\n        <Toolbar>\n          <BookIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Book Search Engine\n          </Typography>\n        </Toolbar>\n      </AppBar> */}\n      <main>\n        {/* Search bar including the Advance search options */}\n        <SearchBar handleRequest={handleRequest}  authors={state.authors} book_titles={state.book_titles} />\n\n        {/* Results container */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* Container to hold the results of the search  */}\n          {state.isLoading\n          ? ( <Grid container \n            // spacing={6}\n             justify=\"center\"   \n             alignItems=\"center\" \n             >\n            <CircularProgress />\n          </Grid>) \n          :  ( \n            state.success && (\n            (state.apiResponse.books.length>0 )\n            ? ( <ResultPage results={state.apiResponse.books} searchTerms={state.searchTerms} />)\n            :  ( <Typography variant=\"h6\" align='center' color='primary' className=\"error-message\">{\"It seems there were no results for your query.\"}</Typography> )\n           )) // provide list of results\n          }\n          {state.errorOccur && <Typography variant=\"h6\" align='center' color='error' className=\"error-message\">{`Your request has timed out. The error message is: ${state.errorMsg}`}</Typography> }\n        </Container>\n      </main>\n\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}","const axios = require('axios');\n// const findQuoteURL = 'http://localhost:9000/findQuote';\nconst findQuoteURL = 'http://188.166.173.191:5000/quote_from_id';\n\nconst findQuote = async(quoteId) => {\n    return axios.post(findQuoteURL,{\n        _id: quoteId,\n        responseType: 'json'\n    })\n    .then(response => {\n        console.log(\"res in callAPI is: \" + JSON.stringify(response));\n        return response.data;\n      })\n    .catch(error => {\n        throw error;\n    });   \n}\n\nexport default findQuote;\n\n\n","const axios = require('axios');\nconst setUpURL = 'http://localhost:5000/SetUp';\n\nconst setUp = async() => {\n    return axios.get(setUpURL,{})\n    .then(response => {\n        console.log(\"res in callAPI is: \" + JSON.stringify(response));\n        return response.data;\n      })\n    .catch(error => {\n        throw error;\n    });   \n}\n\nexport default setUp;\n\n\n","import './App.css';\nimport SearchPage from \"./views/SearchPage.js\";\nimport React, { useState,useEffect } from \"react\";\nimport findQuote from \"./api/findQuote.js\";\nimport setUp from \"./api/setUp.js\"\n\nfunction App(){\n    const [state, setState] = useState({\n        connectDB:{\n            isLoading:false,\n            error:\"\"\n        }\n    });\n\n\n    // useEffect(() => {\n    //     const setUpRequest = async () => {\n    //       setState({ ...state, connectDB: { ...state.connectDB, isLoading: true } });\n    //       await setUp()\n    //         .then(response => {\n    //           console.log(response);\n    //           setState({\n    //             ...state,\n    //             connectDB: {\n    //               isLoading: false,\n    //             }\n    //           });\n    //         })\n    //         .catch(errorResponse => {\n    //           setState({\n    //             ...state,\n    //             connectDB: { isLoading: false, error: errorResponse }\n    //           });\n    //         });\n    //     };\n    \n    //     setUpRequest();\n        \n    //   }, []); // empty list of dependencies ensures the hooks is only called upon rendering of the component\n\n    return(\n        //TODO: Display different component in case of a db connection error \n        <div>\n        <SearchPage/>\n        </div>\n    )\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n// class App extends React.Component {\n//   constructor(props) {\n//       super(props);\n//       this.state = { apiResponse: \"\" , quoteId: \"\"};\n//       this.getQuoteId = this.getQuoteId.bind(this);\n//       this.findQuote = this.findQuote.bind(this);\n//       this.setApiResponse = this.setApiResponse.bind(this);\n//   }\n\n//   async callAPI(route, options) {\n//     let quote = await fetch(`http://localhost:9000/${route}`, options);\n//     let res = await quote.json();\n//     console.log(\"res in callAPI is: \" + JSON.stringify(res));\n//     return res;\n//   }\n\n//   getQuoteId(event) {\n//     this.setState({quoteId: event.target.value});\n//   }\n\n//   setApiResponse(res) {\n//     // alert(\"res: \" + res);\n//     console.log(\"res in setAPIResponse: \" + JSON.stringify(res));\n//     this.setState({apiResponse: JSON.stringify(res.quote)});\n//   }\n\n//   async findQuote(event) {\n//     event.preventDefault();\n//     const requestOptions = {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({_id: this.state.quoteId})\n//     };\n//     let res = await this.callAPI(\"findQuote\", requestOptions);\n//     console.log(\"res in findQuote: \" + JSON.stringify(res));\n//     this.setApiResponse(res);\n//   }\n\n//   async componentDidMount() {\n//     let res = await this.callAPI(\"setUp\", {});\n//     console.log(res);\n//   }\n\n//   render() {\n//       return (\n//           <div>\n//               <SearchPage/>\n//               <input type=\"text\" value={this.state.quoteId} onChange={this.getQuoteId}></input>\n//               <button onClick={this.findQuote}>Click me</button>\n//               <p>{this.state.apiResponse}</p>\n//           </div>\n//       );\n//   }\n// }\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}