{"version":3,"sources":["components/BookCard.js","views/ResultPage.js","components/SearchFeatures.js","api/getSearchResults.js","components/SearchBar.js","views/SearchPage.js","api/findQuote.js","api/setUp.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginTop","marginBottom","border","cover","maxWidth","minWidth","padding","objectFit","details","flexDirection","content","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","BookCard","resultObj","searchTerms","classes","React","useState","expanded","setExpanded","book","quote","authors","split","i","length","Card","className","CardMedia","src","thumbnail","style","CardContent","Typography","variant","component","title","gutterBottom","lines","more","less","anchorClass","width","cite","highlightClassName","searchWords","autoEscape","textToHighlight","Button","disableRipple","size","color","href","previewLink","target","align","margin","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","categories","pageCount","publishedDate","averageRating","ratingsCount","ResultPage","results","data","offset","perPageResults","state","setState","console","log","useEffect","a","onRender","count","handlePaginationClick","Object","keys","Number","Math","floor","Grid","container","spacing","justify","alignItems","item","xs","Pagination","page","onChange","e","slice","filter","map","idx","axios","require","baseURL","getSearchResults","endpoint","params","post","terms","author","bookTitle","genre","yearTo","yearFrom","responseType","then","response","catch","error","formControl","years","push","SearchFeatures","props","bookSearch","handleChange","field","value","FormControlLabel","control","Switch","checked","name","label","TextField","id","FormControl","InputLabel","Select","labelId","MenuItem","heroContent","backgroundColor","palette","background","paper","heroButtons","SearchBar","Container","fullWidth","multiline","rowsMax","event","paragraph","param","handleRequest","preventDefault","apiResponse","success","icon","marginRight","cardGrid","paddingTop","paddingBottom","footer","SearchPage","books","isLoading","requestError","searchInput","errorResponse","Fragment","CssBaseline","CircularProgress","App","connectDB","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6936305a.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Highlighter from \"react-highlight-words\";\nimport ShowMoreText from 'react-show-more-text';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginTop: '5%',\n    marginBottom: '5%',\n    border: '0.2em solid lightgrey'\n  },\n  cover: {\n    maxWidth: 120,\n    minWidth: 120,\n    padding: 7,\n    objectFit: 'cover',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  }\n}));\n\nexport default function BookCard({resultObj, searchTerms}) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    let book  = resultObj;\n    let quote = resultObj.quote ?  resultObj.quote : \"\";\n    let quoteArr = quote.split(\" \");\n    let authors = \"\"\n    for (let i = 0; i < book.authors.length; i++) {\n      if (i == book.authors.length - 1) {\n        authors += book.authors[i]\n      } else {\n        authors += book.authors[i] + \", \"\n      }\n    }\n\n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n\n\n    return (\n\n      <Card className={classes.root} >\n        <CardMedia\n          className={classes.cover}\n        >\n          <img src={book.thumbnail} style={{\"max-height\" : \"100%\", \"max-width\" : \"100%\", \n          \"border\" : \"0.2em solid black\", \"border-radius\" : \"0.1em\"}}/>\n        </CardMedia>\n        <div className={classes.details}>\n        \n          <CardContent className={classes.content}>\n            <Typography variant=\"h5\" component=\"h2\">\n              {book.title}\n            </Typography>\n            <Typography gutterBottom component=\"h3\"   >\n              {authors}\n            </Typography>\n              \n            <Typography gutterBottom component=\"h4\" variant=\"h6\" style={{\"color\" : \"darkblue\", \"font-style\": \"italic\"}} >\n              \n            {(quote.length > 300 ? \n            <ShowMoreText\n            /* Default options */\n            lines={3}\n            more='Show more'\n            less='Show less'\n            className='content-css'\n            anchorClass='my-anchor-css-class'\n            expanded={false}\n            width={0}\n            >\n              <q cite=\"https://www.mozilla.org/en-US/about/history/details/\">{\n            <Highlighter\n            highlightClassName=\"YourHighlightClass\"\n            searchWords={searchTerms}\n            autoEscape={true}\n            textToHighlight={quote}\n          >\n            \n            </Highlighter>}</q>\n            </ShowMoreText>\n            : \n            <q cite=\"https://www.mozilla.org/en-US/about/history/details/\">{\n            <Highlighter\n            highlightClassName=\"YourHighlightClass\"\n            searchWords={searchTerms}\n            autoEscape={true}\n            textToHighlight={quote}\n            >\n            </Highlighter>}</q>\n            )}\n            \n                \n              \n            </Typography>\n            <Button disableRipple size=\"small\" color=\"primary\" href={book.previewLink}  target=\"_blank\" style={{'cursor' : 'pointer',  \n              'textTransform': \"none\", 'backgroundColor': 'transparent'  }}>\n              View on Google Books\n            </Button>\n            <hr  style={{\n              color: 'lightblue',\n              align: 'left',\n              margin: 0,\n              width: '100%'\n            }}/>\n          </CardContent>\n          \n          <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"h2\" >\n                Further Book Details\n              </Typography>\n              <Typography gutterBottom component=\"h3\"   >\n              • Book categories: {book.categories}\n              </Typography>\n              <Typography gutterBottom component=\"h3\"   >\n              • Number of pages: {book.pageCount}\n              </Typography>\n              <Typography gutterBottom component=\"h3\"   >\n              • Published date: {book.publishedDate}\n              </Typography>\n              <Typography gutterBottom component=\"h3\"   >\n              • ISBN: {book['isbn-13']}\n              </Typography>\n              <Typography gutterBottom component=\"h3\"   >\n              • Average rating: {book.averageRating == \"\" ? \"\" :  book.averageRating + \"/5\"}\n              </Typography>\n              <Typography gutterBottom component=\"h3\"   >\n              • Number of ratings: {book.ratingsCount}\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </div>\n      </Card>\n\n    )              \n}\n\n","import React, {useState,useEffect} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BookCard from \"../components/BookCard.js\"\nimport Pagination from '@material-ui/lab/Pagination';\n\n//  props will be a list of book objects\nexport default function ResultPage({results, searchTerms}) {\n\n      const [state, setState] = useState({\n          data : [],\n          searchTerms : [],\n          offset : 1,\n          perPageResults: 10,\n        });\n\n        console.log(\"Result page rendered\")\n\n        \n        useEffect(() => {\n          const onRender = async () => {\n            console.log(\"Use effect hook\")\n            setState({...state, data:results, searchTerms : searchTerms}) \n            }\n          onRender()\n        },[]);\n\n\n        const handlePaginationClick = (offset) => {\n          setState({...state,offset:offset})\n        }\n\n        // Calculate how many pagination page we will have \n        var length = Object.keys(state.data).length;\n        var count;\n        if (length % Number(state.perPageResults) == 0)\n          count = Math.floor(length/Number(state.perPageResults)) \n        else\n          count = Math.floor(length/Number(state.perPageResults)) + 1\n\n        console.log(\"Page count\",count)\n\n\n        return (\n        <Grid container \n        className=\"book-container\" \n        spacing={6}\n         justify=\"center\"   \n         alignItems=\"center\" \n         >\n          <Grid \n            item \n            className=\"book-card-result\"\n            xs={8}\n          >\n\n            {length > state.perPageResults &&\n              <Pagination \n              count={count} \n              page={state.offset} \n              onChange={(e, offset) => handlePaginationClick(offset)} />\n            }\n\n            {state.data.slice(\n             (state.offset -1 )*state.perPageResults, \n              (state.offset-1)*state.perPageResults + Number(state.perPageResults)).filter((book) => {\n                  return book.title != null;\n              }).map((book,idx) =>\n                  <BookCard  item key={idx} resultObj={book} searchTerms={state.searchTerms} />\n              )}\n\n            {length> state.perPageResults &&\n             <Pagination \n             count={count} \n             page={state.offset} \n             onChange={(e, offset) => handlePaginationClick(offset)} />\n            }\n\n          </Grid>\n        </Grid> \n        \n        )\n};\n\n\n","import React ,{useState,useEffect} from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n  }));\n  \n  \nlet years = []\nfor(var i = 1990; i< 2022; i++){\n  years.push(i)\n}\n\nexport default function SearchFeatures(props) {\n    const classes = useStyles();\n\n    const [state, setState] = useState({\n          bookSearch : false,\n          author : \"\",\n          bookTitle: \"\",\n          genre: \"\",\n          yearFrom:1990,\n          yearTo : 2021\n      });\n    \n\n    \n    const handleChange = (field,value) => {\n        console.log(\"Field\",field)\n        console.log(\"Value\",value)\n\n        // TODO \n        // Year has to be checked and error message displayed\n        setState({...state,[field]:value})\n        \n        /* Pass state to parent component  */\n        props.handleChange(field,value)\n    };\n\n\n    return(\n    <>\n         {/* Extra search features */}\n         <Grid container>  \n         <FormControlLabel\n           control={<Switch checked={state.bookSearch} onChange={e => handleChange('bookSearch', e.target.checked)} name=\"bookSearch\" color=\"primary\"/>}\n           label=\"Book Search\"\n         />\n       </Grid>\n\n       <Grid container spacing={1}>\n\n         {/* First row of advance Search */}\n         <Grid container item xs={12} spacing={3}>\n           <Grid container item xs={4} >\n             <TextField \n             id=\"standard-basic\" label=\"Book Title\" \n             value={state.bookTitle}\n             onChange={e => handleChange('bookTitle', e.target.value)} /> \n            </Grid>\n           <Grid container item xs={4} >\n             <TextField \n             id=\"standard-basic\" label=\"Author\" \n             value={state.author}\n             onChange={e => handleChange('author', e.target.value)} />  \n            </Grid>\n           <Grid container item xs={4} >\n             <TextField \n             id=\"standard-basic\" label=\"Genre\" \n             value={state.genre}\n             onChange={e => handleChange('genre', e.target.value)} />  \n            </Grid>            \n         </Grid>\n         \n         {/* Second row of advance Search */}\n         <Grid container item xs={12} spacing={3}>\n\n         \n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"year-from\">Year From</InputLabel>\n                 <Select\n                   labelId=\"year-from-select\"\n                   id=\"year-from-select\"\n                   // open={open}\n                   // onClose={handleClose}\n                   // onOpen={handleOpen}\n                   value={state.yearFrom}\n                   onChange={e => handleChange('yearFrom', e.target.value)}\n                 >\n                   {years.map((name) => (\n                               <MenuItem key={name} value={name} >\n                                 {name}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>\n\n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"year-to\">Year To</InputLabel>\n                 <Select\n                   labelId=\"year-to-select\"\n                   id=\"year-to-select\"\n                   // open={open}\n                   // onClose={handleClose}\n                   // onOpen={handleOpen}\n                   value={state.yearTo}\n                   onChange={e => handleChange('yearTo', e.target.value)}\n                 >\n                   {years.map((name) => (\n                               <MenuItem key={name} value={name} >\n                                 {name}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>\n         </Grid>\n       </Grid>\n    </>\n    )\n\n}\n","const axios = require('axios');\nconst baseURL = 'https://ttds-14.herokuapp.com';\n\nconst getSearchResults = async(endpoint, params) => {\n    console.log(\"request endpoint\",baseURL + endpoint)\n    return axios.post(baseURL + endpoint,{\n        terms: params.terms,\n        author: params.author ,\n        bookTitle: params.bookTitle, \n        genre: params.genre, \n        yearTo: params.yearTo, \n        yearFrom: params.yearFrom,\n        responseType: 'json'\n    })\n    .then(response => {\n        // console.log(\"res in callAPI is: \" + JSON.stringify(response));\n        return response.data;\n      })\n    .catch(error => {\n        throw error;\n    });   \n}\n\nexport default getSearchResults;\n\n\n","import React ,{useState,useEffect} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nimport SearchFeatures from \"./SearchFeatures.js\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n      heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n      },\n      heroButtons: {\n        marginTop: theme.spacing(4),\n      },\n      margin: {\n        margin: theme.spacing(1),\n      },\n  }));\n  \n\n\nexport default function SearchBar(props) {\n    const classes = useStyles();\n\n    const [state, setState] = useState({\n        quote:\"\",\n        bookSearch : false,\n        author : \"\",\n        bookTitle: \"\",\n        genre: \"\",\n        yearTo : 2021,\n        yearFrom: 1990\n      });\n\n    const handleChange = (event) => {\n        setState({...state,quote: event.target.value})\n    };\n    \n    const handleSearchFeaturesChange = (param,value) =>{\n        setState({...state, [param]:value});\n        console.log(\"Search features input:\",param,value);\n    }\n    \n    const handleClear=(event)=> {\n        event.preventDefault();\n        setState({...state, quote:\"\",apiResponse:{},success : false})\n        // setQuote(\"\");\n        // setSubmit(false)\n    }\n\n    \n    const handleSubmit = () =>{\n        // Validate input \n        // If input is correct then make the request otherwise change state\n        // and display appropriate component\n        // findQuoteRequest();\n\n        props.handleRequest(state)\n    }\n\n    \n    return(\n    <>\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Search a book by a quote\n            </Typography>\n           \n           {/* Search Bar */}\n            <TextField \n            fullWidth \n            className={classes.margin} \n            label=\"Type your quote...\"\n            multiline\n            rowsMax={4}\n            value={state.quote}\n            onChange={handleChange}\n            ></TextField>\n\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Try to type something short and leading about the book you are looking for\n            </Typography>\n\n            {/* Search features component  */}\n            <SearchFeatures handleChange = {handleSearchFeaturesChange}/>\n\n            {/* Buttons */}\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n                    Submit\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" onClick={handleClear}>\n                    Clear\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        \n    </>\n    )\n\n}\n\n","import React, {useState,useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport BookIcon from '@material-ui/icons/Book';\nimport Grid from '@material-ui/core/Grid';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport ResultPage from \"./ResultPage.js\"\nimport getSearchResults from \"../api/getSearchResults.js\";\nimport SearchBar from \"../components/SearchBar.js\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n\n}));\n\n\nexport default function SearchPage() {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    apiResponse: {\n      books:[]\n    } , \n    searchTerms : [],\n    isLoading : false,\n    requestError:\"\",\n    success: false\n  });\n\n  console.log(\"Search page render\")\n\n/* \nSingle handleRequest function that will trigger the proper API function based on the\ntype of search \n */\n  const handleRequest = async (searchInput) => {\n\n    let {\n      quote, \n      bookSearch,\n      author ,\n      bookTitle,\n      genre,\n      yearFrom,\n      yearTo} = searchInput\n\n\n    setState({ ...state, isLoading: true, requestError: \"\", apiResponse: \"\" });\n    console.log(state.isLoading)\n    \n    let terms = quote.split(\" \") \n    \n    await getSearchResults(\n      bookSearch ? \"/books_from_terms_list\" : \"/quotes_from_terms_list\",\n\n      {terms, author ,bookTitle, genre, yearFrom, yearTo}\n      )\n        .then(response => {\n            // console.log(\"res in setAPIResponse: \" + JSON.stringify(response));\n            setState({\n                ...state,\n                isLoading: false,\n                apiResponse: {\n                  books : response.books}, // book object, might contain quote as well \n                requestError: \"\",\n                success:true,\n                searchTerms:quote.split(\" \")\n            });\n        })\n        .catch(errorResponse => {\n            setState({\n                ...state,\n                isLoading: false,\n                requestError: errorResponse,\n                apiResponse: {\n                  quote:\"\"\n                }\n            });\n        });        \n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      {/* <AppBar position=\"relative\">\n        <Toolbar>\n          <BookIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Book Search Engine\n          </Typography>\n        </Toolbar>\n      </AppBar> */}\n      <main>\n        {/* Search bar including the Advance search options */}\n        <SearchBar handleRequest={handleRequest}/>\n\n        {/* Results container */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* Container to hold the results of the search  */}\n          {state.isLoading\n          ? ( <Grid container \n            // spacing={6}\n             justify=\"center\"   \n             alignItems=\"center\" \n             >\n            <CircularProgress />\n          </Grid>) \n          :  ( state.success && <ResultPage results={state.apiResponse.books} searchTerms={state.searchTerms} /> ) // provide list of results\n          }\n        </Container>\n      </main>\n\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}","const axios = require('axios');\n// const findQuoteURL = 'http://localhost:9000/findQuote';\nconst findQuoteURL = 'https://ttds-14.herokuapp.com/quote_from_id';\n\nconst findQuote = async(quoteId) => {\n    return axios.post(findQuoteURL,{\n        _id: quoteId,\n        responseType: 'json'\n    })\n    .then(response => {\n        console.log(\"res in callAPI is: \" + JSON.stringify(response));\n        return response.data;\n      })\n    .catch(error => {\n        throw error;\n    });   \n}\n\nexport default findQuote;\n\n\n","const axios = require('axios');\nconst setUpURL = 'http://localhost:9000/SetUp';\n\nconst setUp = async() => {\n    return axios.get(setUpURL,{})\n    .then(response => {\n        console.log(\"res in callAPI is: \" + JSON.stringify(response));\n        return response.data;\n      })\n    .catch(error => {\n        throw error;\n    });   \n}\n\nexport default setUp;\n\n\n","import './App.css';\nimport SearchPage from \"./views/SearchPage.js\";\nimport React, { useState,useEffect } from \"react\";\nimport findQuote from \"./api/findQuote.js\";\nimport setUp from \"./api/setUp.js\"\n\nfunction App(){\n    const [state, setState] = useState({\n        connectDB:{\n            isLoading:false,\n            error:\"\"\n        }\n    });\n\n\n    // useEffect(() => {\n    //     const setUpRequest = async () => {\n    //       setState({ ...state, connectDB: { ...state.connectDB, isLoading: true } });\n    //       await setUp()\n    //         .then(response => {\n    //           console.log(response);\n    //           setState({\n    //             ...state,\n    //             connectDB: {\n    //               isLoading: false,\n    //             }\n    //           });\n    //         })\n    //         .catch(errorResponse => {\n    //           setState({\n    //             ...state,\n    //             connectDB: { isLoading: false, error: errorResponse }\n    //           });\n    //         });\n    //     };\n    \n    //     setUpRequest();\n        \n    //   }, []); // empty list of dependencies ensures the hooks is only called upon rendering of the component\n\n    return(\n        //TODO: Display different component in case of a db connection error \n        <div>\n        <SearchPage/>\n        </div>\n    )\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n// class App extends React.Component {\n//   constructor(props) {\n//       super(props);\n//       this.state = { apiResponse: \"\" , quoteId: \"\"};\n//       this.getQuoteId = this.getQuoteId.bind(this);\n//       this.findQuote = this.findQuote.bind(this);\n//       this.setApiResponse = this.setApiResponse.bind(this);\n//   }\n\n//   async callAPI(route, options) {\n//     let quote = await fetch(`http://localhost:9000/${route}`, options);\n//     let res = await quote.json();\n//     console.log(\"res in callAPI is: \" + JSON.stringify(res));\n//     return res;\n//   }\n\n//   getQuoteId(event) {\n//     this.setState({quoteId: event.target.value});\n//   }\n\n//   setApiResponse(res) {\n//     // alert(\"res: \" + res);\n//     console.log(\"res in setAPIResponse: \" + JSON.stringify(res));\n//     this.setState({apiResponse: JSON.stringify(res.quote)});\n//   }\n\n//   async findQuote(event) {\n//     event.preventDefault();\n//     const requestOptions = {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({_id: this.state.quoteId})\n//     };\n//     let res = await this.callAPI(\"findQuote\", requestOptions);\n//     console.log(\"res in findQuote: \" + JSON.stringify(res));\n//     this.setApiResponse(res);\n//   }\n\n//   async componentDidMount() {\n//     let res = await this.callAPI(\"setUp\", {});\n//     console.log(res);\n//   }\n\n//   render() {\n//       return (\n//           <div>\n//               <SearchPage/>\n//               <input type=\"text\" value={this.state.quoteId} onChange={this.getQuoteId}></input>\n//               <button onClick={this.findQuote}>Click me</button>\n//               <p>{this.state.apiResponse}</p>\n//           </div>\n//       );\n//   }\n// }\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}