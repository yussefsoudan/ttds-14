{"ast":null,"code":"var _jsxFileName = \"/Users/yussefsoudan/Studies/Uni/year-4-cs/TTDS/CW3/ttds-14/website/book-search-client/src/components/SearchFeatures.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nlet years = [];\n\nfor (var i = 1990; i < 2022; i++) {\n  years.push(i);\n}\n\nlet genres = ['Fiction', 'Biography & Autobiography', 'Juvenile Fiction', 'Poetry', 'Young Adult Fiction', 'Philosophy', 'Young Adult Nonfiction', 'True Crime', 'Indic fiction (English)'];\nconst SearchFeatures = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const classes = useStyles();\n  const authors = props.authors;\n  const book_titles = props.book_titles;\n  const [state, setState] = useState({\n    bookSearch: false,\n    author: \"\",\n    bookTitle: \"\",\n    genre: \"\",\n    yearFrom: 1700,\n    yearTo: 2021,\n    minRating: 1\n  });\n\n  const handleChange = (field, value) => {\n    console.log(\"Field\", field);\n    console.log(\"Value\", value); // TODO \n    // Year has to be checked and error message displayed\n\n    setState({ ...state,\n      [field]: value\n    });\n    /* Pass state to parent component  */\n\n    props.handleChange(field, value);\n  };\n\n  const handleClear = () => {\n    setState({ ...state,\n      author: \"\",\n      bookTitle: \"\",\n      genre: \"\",\n      yearFrom: 1990,\n      yearTo: 2021\n    });\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      handleClear: handleClear\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: state.bookSearch,\n          onChange: e => handleChange('bookSearch', e.target.checked),\n          name: \"bookSearch\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this),\n        label: \"Book Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"book-title-select\",\n            options: book_titles,\n            getOptionLabel: book_title => book_title.book_title,\n            style: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Book Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 40\n            }, this),\n            onChange: (event, newValue) => handleChange('bookTitle', newValue ? newValue.book_title : newValue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"author-select\",\n            options: authors,\n            getOptionLabel: author => author.name,\n            style: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 40\n            }, this),\n            onChange: (event, newValue) => handleChange('author', newValue ? newValue.name : newValue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"genre\",\n              children: \"Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"genre-selcet\",\n              id: \"genre-select\",\n              value: state.genre,\n              onChange: e => handleChange('genre', e.target.value),\n              children: genres.map(genre => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: genre,\n                children: genre\n              }, genre, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 32\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.formControl,\n            label: \"Year From\",\n            labelId: \"year-from-select\",\n            id: \"year-from-select\",\n            rowsMax: 1,\n            value: state.yearFrom == '' ? 0 : state.yearFrom,\n            onChange: e => handleChange('yearFrom', parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"year-to\",\n              children: \"Year To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-to-select\",\n              id: \"year-to-select\" // open={open}\n              // onClose={handleClose}\n              // onOpen={handleOpen}\n              ,\n              value: state.yearTo,\n              onChange: e => handleChange('yearTo', e.target.value),\n              children: years.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: name\n              }, name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 32\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"rating\",\n              children: \"Min. Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"rating-selcet\",\n              id: \"rating-select\",\n              value: state.minRating,\n              onChange: e => handleChange('minRating', e.target.value),\n              children: [1, 2, 3, 4, 5].map(rating => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: rating,\n                children: rating\n              }, rating, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 32\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}, \"7WRVUS0ligS3ZlPZvtL6SWmT8jw=\", false, function () {\n  return [useStyles, useImperativeHandle];\n}));\n_c2 = SearchFeatures;\nexport default SearchFeatures;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchFeatures$forwardRef\");\n$RefreshReg$(_c2, \"SearchFeatures\");","map":{"version":3,"sources":["/Users/yussefsoudan/Studies/Uni/year-4-cs/TTDS/CW3/ttds-14/website/book-search-client/src/components/SearchFeatures.js"],"names":["React","useState","forwardRef","useImperativeHandle","Switch","FormControlLabel","MenuItem","Select","InputLabel","FormControl","Grid","TextField","makeStyles","Autocomplete","useStyles","theme","formControl","minWidth","years","i","push","genres","SearchFeatures","props","ref","classes","authors","book_titles","state","setState","bookSearch","author","bookTitle","genre","yearFrom","yearTo","minRating","handleChange","field","value","console","log","handleClear","e","target","checked","book_title","width","params","event","newValue","name","map","parseInt","rating"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,mBAAtC,QAAiE,OAAjE;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;;AAGA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,WAAW,EAAE;AACT;AACAC,IAAAA,QAAQ,EAAE;AAFD;AADwB,CAAZ,CAAD,CAA5B;AAQA,IAAIC,KAAK,GAAG,EAAZ;;AACA,KAAI,IAAIC,CAAC,GAAG,IAAZ,EAAkBA,CAAC,GAAE,IAArB,EAA2BA,CAAC,EAA5B,EAA+B;AAC7BD,EAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACD;;AAGD,IAAIE,MAAM,GAAG,CAAC,SAAD,EAAW,2BAAX,EAAuC,kBAAvC,EAA0D,QAA1D,EAAmE,qBAAnE,EACb,YADa,EACA,wBADA,EACyB,YADzB,EACsC,yBADtC,CAAb;AAGA,MAAMC,cAAc,gBAAGpB,UAAU,SAAC,CAACqB,KAAD,EAAOC,GAAP,KAAe;AAAA;;AAC7C,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AAEA,QAAMY,OAAO,GAAGH,KAAK,CAACG,OAAtB;AACA,QAAMC,WAAW,GAAGJ,KAAK,CAACI,WAA1B;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC;AAC7B6B,IAAAA,UAAU,EAAG,KADgB;AAE7BC,IAAAA,MAAM,EAAG,EAFoB;AAG7BC,IAAAA,SAAS,EAAE,EAHkB;AAI7BC,IAAAA,KAAK,EAAE,EAJsB;AAK7BC,IAAAA,QAAQ,EAAC,IALoB;AAM7BC,IAAAA,MAAM,EAAG,IANoB;AAO7BC,IAAAA,SAAS,EAAE;AAPkB,GAAD,CAAlC;;AAYA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,KAApB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB,EAFkC,CAIlC;AACA;;AACAV,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAU,OAACU,KAAD,GAAQC;AAAlB,KAAD,CAAR;AAEA;;AACAhB,IAAAA,KAAK,CAACc,YAAN,CAAmBC,KAAnB,EAAyBC,KAAzB;AACH,GAVD;;AAaA,QAAMG,WAAW,GAAC,MAAK;AACrBb,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,MAAAA,MAAM,EAAC,EAAlB;AAAqBC,MAAAA,SAAS,EAAC,EAA/B;AAAkCC,MAAAA,KAAK,EAAC,EAAxC;AAA2CC,MAAAA,QAAQ,EAAC,IAApD;AAAyDC,MAAAA,MAAM,EAAG;AAAlE,KAAD,CAAR;AACD,GAFD;;AAKAhC,EAAAA,mBAAmB,CAACqB,GAAD,EAAM,MAAM;AAC7B,WAAO;AACLkB,MAAAA,WAAW,EAAEA;AADR,KAAP;AAGD,GAJkB,CAAnB;AAOA,sBACA;AAAA,4BAEK,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,6BACA,QAAC,gBAAD;AACE,QAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEd,KAAK,CAACE,UAAvB;AAAmC,UAAA,QAAQ,EAAEa,CAAC,IAAIN,YAAY,CAAC,YAAD,EAAeM,CAAC,CAACC,MAAF,CAASC,OAAxB,CAA9D;AAAgG,UAAA,IAAI,EAAC,YAArG;AAAkH,UAAA,KAAK,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,gBADX;AAEE,QAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFL,eASG,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BAGE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,OAAO,EAAE,CAAtC;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAAA,iCACA,QAAC,YAAD;AACC,YAAA,EAAE,EAAC,mBADJ;AAEC,YAAA,OAAO,EAAElB,WAFV;AAGC,YAAA,cAAc,EAAGmB,UAAD,IAAgBA,UAAU,CAACA,UAH5C;AAIC,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAJR;AAKC,YAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,cAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAL1B;AAMC,YAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqBb,YAAY,CAAC,WAAD,EAAca,QAAQ,GAAGA,QAAQ,CAACJ,UAAZ,GAAyBI,QAA/C;AAN5C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAwBG,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAAA,iCACA,QAAC,YAAD;AACE,YAAA,EAAE,EAAC,eADL;AAEE,YAAA,OAAO,EAAExB,OAFX;AAGE,YAAA,cAAc,EAAGK,MAAD,IAAYA,MAAM,CAACoB,IAHrC;AAIE,YAAA,KAAK,EAAE;AAAEJ,cAAAA,KAAK,EAAE;AAAT,aAJT;AAKE,YAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,cAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAL3B;AAME,YAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqBb,YAAY,CAAC,QAAD,EAAWa,QAAQ,GAAGA,QAAQ,CAACC,IAAZ,GAAmBD,QAAtC;AAN7C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAxBH,eA4CE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEzB,OAAO,CAACT,WAAhC;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,cADV;AAEE,cAAA,EAAE,EAAC,cAFL;AAIE,cAAA,KAAK,EAAEY,KAAK,CAACK,KAJf;AAKE,cAAA,QAAQ,EAAEU,CAAC,IAAGN,YAAY,CAAC,OAAD,EAAUM,CAAC,CAACC,MAAF,CAASL,KAAnB,CAL5B;AAAA,wBAOGlB,MAAM,CAAC+B,GAAP,CAAYnB,KAAD,iBACA,QAAC,QAAD;AAAsB,gBAAA,KAAK,EAAEA,KAA7B;AAAA,0BACGA;AADH,iBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,sBADX;AAPH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAoEE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,OAAO,EAAE,CAAtC;AAAA,gCAuBE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAAA,iCACC,QAAC,SAAD;AACE,YAAA,SAAS,EAAER,OAAO,CAACT,WADrB;AAEE,YAAA,KAAK,EAAC,WAFR;AAGE,YAAA,OAAO,EAAC,kBAHV;AAIE,YAAA,EAAE,EAAC,kBAJL;AAKE,YAAA,OAAO,EAAE,CALX;AAME,YAAA,KAAK,EAAEY,KAAK,CAACM,QAAN,IAAkB,EAAlB,GAAuB,CAAvB,GAA2BN,KAAK,CAACM,QAN1C;AAOE,YAAA,QAAQ,EAAES,CAAC,IAAIN,YAAY,CAAC,UAAD,EAAagB,QAAQ,CAACV,CAAC,CAACC,MAAF,CAASL,KAAV,CAArB;AAP7B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAmCE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEd,OAAO,CAACT,WAAhC;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,EAAE,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,gBADV;AAEE,cAAA,EAAE,EAAC,gBAFL,CAGE;AACA;AACA;AALF;AAME,cAAA,KAAK,EAAEY,KAAK,CAACO,MANf;AAOE,cAAA,QAAQ,EAAEQ,CAAC,IAAIN,YAAY,CAAC,QAAD,EAAWM,CAAC,CAACC,MAAF,CAASL,KAApB,CAP7B;AAAA,wBASGrB,KAAK,CAACkC,GAAN,CAAWD,IAAD,iBACC,QAAC,QAAD;AAAqB,gBAAA,KAAK,EAAEA,IAA5B;AAAA,0BACGA;AADH,iBAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,sBADX;AATH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnCF,eAwDE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAE1B,OAAO,CAACT,WAAhC;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,eADV;AAEE,cAAA,EAAE,EAAC,eAFL;AAIE,cAAA,KAAK,EAAEY,KAAK,CAACQ,SAJf;AAKE,cAAA,QAAQ,EAAEO,CAAC,IAAGN,YAAY,CAAC,WAAD,EAAcM,CAAC,CAACC,MAAF,CAASL,KAAvB,CAL5B;AAAA,wBAOG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAYa,GAAZ,CAAiBE,MAAD,iBACL,QAAC,QAAD;AAAuB,gBAAA,KAAK,EAAEA,MAA9B;AAAA,0BACGA;AADH,iBAAeA,MAAf;AAAA;AAAA;AAAA;AAAA,sBADX;AAPH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,cApEF;AAAA;AAAA;AAAA;AAAA;AAAA,YATH;AAAA,kBADA;AA8JH,CAzMgC;AAAA,UACbxC,SADa,EAoC7BX,mBApC6B;AAAA,GAAjC;MAAMmB,c;AA0MN,eAAeA,cAAf","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from \"react\";\n\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        // margin: theme.spacing(1),\n        minWidth: 120,\n      },\n  }));\n  \n  \nlet years = []\nfor(var i = 1990; i< 2022; i++){\n  years.push(i)\n}\n\n\nlet genres = ['Fiction','Biography & Autobiography','Juvenile Fiction','Poetry','Young Adult Fiction',\n'Philosophy','Young Adult Nonfiction','True Crime','Indic fiction (English)']\n\nconst SearchFeatures = forwardRef((props,ref) => {\n    const classes = useStyles();\n\n    const authors = props.authors;\n    const book_titles = props.book_titles;\n\n    const [state, setState] = useState({\n          bookSearch : false,\n          author : \"\",\n          bookTitle: \"\",\n          genre: \"\",\n          yearFrom:1700,\n          yearTo : 2021,\n          minRating: 1\n      });\n    \n\n    \n    const handleChange = (field,value) => {\n        console.log(\"Field\",field)\n        console.log(\"Value\",value)\n\n        // TODO \n        // Year has to be checked and error message displayed\n        setState({...state,[field]:value})\n        \n        /* Pass state to parent component  */\n        props.handleChange(field,value)\n    };\n\n    \n    const handleClear=()=> {\n      setState({...state, author:\"\",bookTitle:\"\",genre:\"\",yearFrom:1990,yearTo : 2021})\n    }\n\n\n    useImperativeHandle(ref, () => {\n      return {\n        handleClear: handleClear\n      };\n    });\n\n\n    return(\n    <>\n         {/* Extra search features */}\n         <Grid container>  \n         <FormControlLabel\n           control={<Switch checked={state.bookSearch} onChange={e => handleChange('bookSearch', e.target.checked)} name=\"bookSearch\" color=\"primary\"/>}\n           label=\"Book Search\"\n         />\n       </Grid>\n\n       <Grid container spacing={1}>\n\n         {/* First row of advance Search */}\n         <Grid container item xs={12} spacing={3}>\n             <Grid container item xs={4} >\n             <Autocomplete\n              id=\"book-title-select\"\n              options={book_titles}\n              getOptionLabel={(book_title) => book_title.book_title}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Book Title\" />}\n              onChange={(event, newValue) => handleChange('bookTitle', newValue ? newValue.book_title : newValue )}\n            />\n            </Grid>\n           {/*<Grid container item xs={4} >*/}\n           {/*  <TextField */}\n           {/*  id=\"standard-basic\" label=\"Book Title\" */}\n           {/*  value={state.bookTitle}*/}\n           {/*  onChange={e => handleChange('bookTitle', e.target.value)} /> */}\n           {/* </Grid>*/}\n{/*             \n           <Grid container item xs={4} >\n             <TextField \n             id=\"standard-basic\" label=\"Author\" \n             value={state.author}\n             onChange={e => handleChange('author', e.target.value)} />  \n            </Grid> */}\n            <Grid container item xs={4} >\n            <Autocomplete\n              id=\"author-select\"\n              options={authors}\n              getOptionLabel={(author) => author.name}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Author\" />}\n              onChange={(event, newValue) => handleChange('author', newValue ? newValue.name : newValue)}  \n\n            />\n            </Grid>\n            \n\n           {/* <Grid container item xs={4} >\n             <TextField \n             id=\"standard-basic\" label=\"Genre\" \n             value={state.genre}\n             onChange={e => handleChange('genre', e.target.value)} />  \n           </Grid>    */}\n\n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"genre\">Genre</InputLabel>\n                 <Select\n                   labelId=\"genre-selcet\"\n                   id=\"genre-select\"\n\n                   value={state.genre}\n                   onChange={e =>handleChange('genre', e.target.value)}\n                 >\n                   {genres.map((genre) => (\n                               <MenuItem key={genre} value={genre} >\n                                 {genre}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>        \n         </Grid>\n         \n         {/* Second row of advance Search */}\n         <Grid container item xs={12} spacing={3}>\n\n         \n           {/* <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"year-from\">Year From</InputLabel>\n                 <Select\n                   labelId=\"year-from-select\"\n                   id=\"year-from-select\"\n                   // open={open}\n                   // onClose={handleClose}\n                   // onOpen={handleOpen}\n                   value={state.yearFrom}\n                   onChange={e => handleChange('yearFrom', e.target.value)}\n                 >\n                   {years.map((name) => (\n                               <MenuItem key={name} value={name} >\n                                 {name}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid> */}\n           <Grid container item xs={4} >\n            <TextField \n              className={classes.formControl} \n              label=\"Year From\"\n              labelId=\"year-from-select\"\n              id=\"year-from-select\"\n              rowsMax={1}\n              value={state.yearFrom == '' ? 0 : state.yearFrom}\n              onChange={e => handleChange('yearFrom', parseInt(e.target.value))}\n              ></TextField>\n            </Grid>\n\n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"year-to\">Year To</InputLabel>\n                 <Select\n                   labelId=\"year-to-select\"\n                   id=\"year-to-select\"\n                   // open={open}\n                   // onClose={handleClose}\n                   // onOpen={handleOpen}\n                   value={state.yearTo}\n                   onChange={e => handleChange('yearTo', e.target.value)}\n                 >\n                   {years.map((name) => (\n                               <MenuItem key={name} value={name} >\n                                 {name}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>\n\n           <Grid container item xs={4}>\n             <FormControl className={classes.formControl}>\n                 <InputLabel id=\"rating\">Min. Rating</InputLabel>\n                 <Select\n                   labelId=\"rating-selcet\"\n                   id=\"rating-select\"\n\n                   value={state.minRating}\n                   onChange={e =>handleChange('minRating', e.target.value)}\n                 >\n                   {[1,2,3,4,5].map((rating) => (\n                               <MenuItem key={rating} value={rating} >\n                                 {rating}\n                               </MenuItem>\n                             ))}\n                 </Select>\n             </FormControl>\n           </Grid>    \n\n         </Grid>\n       </Grid>\n    </>\n    )\n\n});\nexport default SearchFeatures;\n"]},"metadata":{},"sourceType":"module"}