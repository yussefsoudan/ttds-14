{"ast":null,"code":"var _jsxFileName = \"/Users/yussefsoudan/Studies/Uni/year-4-cs/TTDS/CW3/ttds-14/website/book-search-client/src/views/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport BookIcon from '@material-ui/icons/Book';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ResultPage from \"./ResultPage.js\";\nimport getSearchResults from \"../api/getSearchResults.js\";\nimport SearchBar from \"../components/SearchBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport default function SearchPage() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    apiResponse: {\n      books: []\n    },\n    searchTerms: [],\n    isLoading: false,\n    requestError: \"\",\n    success: false\n  });\n  console.log(\"Search page render\");\n  /* \n  Single handleRequest function that will trigger the proper API function based on the\n  type of search \n   */\n\n  const handleRequest = async searchInput => {\n    let {\n      quote,\n      bookSearch,\n      author,\n      bookTitle,\n      genre,\n      yearFrom,\n      yearTo\n    } = searchInput;\n    setState({ ...state,\n      isLoading: true,\n      requestError: \"\",\n      apiResponse: \"\"\n    });\n    console.log(state.isLoading);\n    let terms = quote.split(\" \");\n    setState({ ...state,\n      searchTerms: terms\n    });\n    console.log(state.terms);\n    await getSearchResults(bookSearch ? \"/books_from_terms_list\" : \"/quotes_from_terms_list\", {\n      terms,\n      author,\n      bookTitle,\n      genre,\n      yearFrom,\n      yearTo\n    }).then(response => {\n      // console.log(\"res in setAPIResponse: \" + JSON.stringify(response));\n      setState({ ...state,\n        isLoading: false,\n        apiResponse: {\n          books: response.books\n        },\n        // book object, might contain quote as well \n        requestError: \"\",\n        success: true\n      });\n    }).catch(errorResponse => {\n      setState({ ...state,\n        isLoading: false,\n        requestError: errorResponse,\n        apiResponse: {\n          quote: \"\"\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        handleRequest: handleRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardGrid,\n        maxWidth: \"md\",\n        children: state.isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true // spacing={6}\n          ,\n          justify: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this) : state.success && /*#__PURE__*/_jsxDEV(ResultPage, {\n          results: state.apiResponse.books,\n          searchTerms: state.searchTerms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }, this) // provide list of results\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.footer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        align: \"center\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: \"Something here to give the footer a purpose!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"44rbsgl+oVLK1foHSDdBjDFoxtM=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/yussefsoudan/Studies/Uni/year-4-cs/TTDS/CW3/ttds-14/website/book-search-client/src/views/SearchPage.js"],"names":["React","useState","useEffect","AppBar","BookIcon","Grid","CssBaseline","Toolbar","Typography","makeStyles","Container","CircularProgress","ResultPage","getSearchResults","SearchBar","useStyles","theme","icon","marginRight","spacing","cardGrid","paddingTop","paddingBottom","footer","backgroundColor","palette","background","paper","padding","margin","formControl","minWidth","SearchPage","classes","state","setState","apiResponse","books","searchTerms","isLoading","requestError","success","console","log","handleRequest","searchInput","quote","bookSearch","author","bookTitle","genre","yearFrom","yearTo","terms","split","then","response","catch","errorResponse"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport BookIcon from '@material-ui/icons/Book';\nimport Grid from '@material-ui/core/Grid';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport ResultPage from \"./ResultPage.js\"\nimport getSearchResults from \"../api/getSearchResults.js\";\nimport SearchBar from \"../components/SearchBar.js\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n\n}));\n\n\nexport default function SearchPage() {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    apiResponse: {\n      books:[]\n    } , \n    searchTerms : [],\n    isLoading : false,\n    requestError:\"\",\n    success: false\n  });\n\n  console.log(\"Search page render\")\n\n/* \nSingle handleRequest function that will trigger the proper API function based on the\ntype of search \n */\n  const handleRequest = async (searchInput) => {\n\n    let {\n      quote, \n      bookSearch,\n      author ,\n      bookTitle,\n      genre,\n      yearFrom,\n      yearTo} = searchInput\n\n\n    setState({ ...state, isLoading: true, requestError: \"\", apiResponse: \"\" });\n    console.log(state.isLoading)\n    \n    let terms = quote.split(\" \")\n    setState({...state,searchTerms:terms})     \n    console.log(state.terms)     \n    \n    await getSearchResults(\n      bookSearch ? \"/books_from_terms_list\" : \"/quotes_from_terms_list\",\n\n      {terms, author ,bookTitle, genre, yearFrom, yearTo}\n      )\n        .then(response => {\n            // console.log(\"res in setAPIResponse: \" + JSON.stringify(response));\n            setState({\n                ...state,\n                isLoading: false,\n                apiResponse: {\n                  books : response.books}, // book object, might contain quote as well \n                requestError: \"\",\n                success:true\n            });\n        })\n        .catch(errorResponse => {\n            setState({\n                ...state,\n                isLoading: false,\n                requestError: errorResponse,\n                apiResponse: {\n                  quote:\"\"\n                }\n            });\n        });        \n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      {/* <AppBar position=\"relative\">\n        <Toolbar>\n          <BookIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Book Search Engine\n          </Typography>\n        </Toolbar>\n      </AppBar> */}\n      <main>\n        {/* Search bar including the Advance search options */}\n        <SearchBar handleRequest={handleRequest}/>\n\n        {/* Results container */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* Container to hold the results of the search  */}\n          {state.isLoading\n          ? ( <Grid container \n            // spacing={6}\n             justify=\"center\"   \n             alignItems=\"center\" \n             >\n            <CircularProgress />\n          </Grid>) \n          :  ( state.success && <ResultPage results={state.apiResponse.books} searchTerms={state.searchTerms} /> ) // provide list of results\n          }\n        </Container>\n      </main>\n\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}