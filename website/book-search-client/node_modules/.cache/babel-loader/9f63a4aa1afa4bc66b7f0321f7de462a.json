{"ast":null,"code":"var _jsxFileName = \"/Users/yussefsoudan/Studies/Uni/year-4-cs/TTDS/CW3/ttds-14/website/book-search-client/src/views/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport BookIcon from '@material-ui/icons/Book';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ResultPage from \"./ResultPage.js\";\nimport getSearchResults from \"../api/getSearchResults.js\";\nimport SearchBar from \"../components/SearchBar.js\";\nimport getAllAuthors from \"../api/getAllAuthors.js\";\nimport getAllBookTitles from \"../api/getAllBookTitles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nlet dummy_authors = [{\n  name: \"Janish\"\n}, {\n  name: \"Harry poppins\"\n}, {\n  name: \"Anna michin\"\n}, {\n  name: \"Mike\"\n}, {\n  name: \"Joah noah\"\n}, {\n  name: \"Michelin\"\n}];\nexport default function SearchPage() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    apiResponse: {\n      books: []\n    },\n    searchTerms: [],\n    searchQuote: \"\",\n    isLoading: false,\n    errorOccur: false,\n    errorMsg: \"\",\n    success: false,\n    authors: [],\n    book_titles: []\n  });\n  console.log(\"Search page render\"); // Use effect hook that will be triggered once, on render, to fetch the Author names\n\n  useEffect(() => {\n    console.log(\"Hook to get author names\");\n\n    const getAuthorsandBookNames = async () => {\n      let authors = [];\n      let book_titles = [];\n      await getAllAuthors().then(response => {\n        // console.log(\"repsonse within author hook\",response);\n        authors = response.authors;\n      }).catch(errorResponse => {\n        console.log(\"Error response\", errorResponse);\n      });\n      await getAllBookTitles().then(response => {\n        // console.log(\"repsonse within book hook\",response);\n        book_titles = response.book_titles;\n      }).catch(errorResponse => {\n        console.log(\"Error response\", errorResponse);\n      });\n      setState({ ...state,\n        book_titles: book_titles,\n        authors: authors\n      });\n    };\n\n    getAuthorsandBookNames();\n  }, []); // empty list of dependencies ensures the hooks is only called upon rendering of the component\n\n  /* \n  Single handleRequest function that will trigger the proper API function based on the\n  type of search \n   */\n\n  const handleRequest = async searchInput => {\n    let {\n      quote,\n      bookSearch,\n      author,\n      bookTitle,\n      genre,\n      yearFrom,\n      yearTo,\n      minRating\n    } = searchInput;\n    setState({ ...state,\n      isLoading: true,\n      requestError: \"\",\n      apiResponse: \"\"\n    });\n    console.log(state.isLoading);\n    await getSearchResults(bookSearch ? \"/books_search\" : \"/quotes_search\", {\n      quote,\n      author,\n      bookTitle,\n      genre,\n      yearFrom,\n      yearTo,\n      minRating\n    }).then(response => {\n      // console.log(\"res in setAPIResponse: \" + JSON.stringify(response));\n      setState({ ...state,\n        isLoading: false,\n        apiResponse: {\n          books: response.books\n        },\n        // book object, might contain quote as well \n        requestError: \"\",\n        success: true,\n        errorOccur: false,\n        searchTerms: response.searchTerms,\n        searchQuote: quote\n      });\n    }).catch(errorResponse => {\n      setState({ ...state,\n        isLoading: false,\n        success: false,\n        errorOccur: true,\n        errorMsg: errorResponse,\n        apiResponse: {\n          quote: \"\"\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        handleRequest: handleRequest,\n        authors: state.authors,\n        book_titles: state.book_titles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardGrid,\n        maxWidth: \"md\",\n        children: [state.isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true // spacing={6}\n          ,\n          justify: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this) : state.success && (state.apiResponse.books.length > 0 ? /*#__PURE__*/_jsxDEV(ResultPage, {\n          results: state.apiResponse.books,\n          searchTerms: state.searchTerms,\n          searchQuote: state.searchQuote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          color: \"primary\",\n          className: \"error-message\",\n          children: \"It seems there were no results for your query.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 18\n        }, this)) // provide list of results\n        , state.errorOccur && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          color: \"error\",\n          className: \"error-message\",\n          children: `Your request has timed out. The error message is: ${state.errorMsg}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"xj8EkInmCnJCIgPviHj+mvvUPS4=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/yussefsoudan/Studies/Uni/year-4-cs/TTDS/CW3/ttds-14/website/book-search-client/src/views/SearchPage.js"],"names":["React","useState","useEffect","AppBar","BookIcon","Grid","CssBaseline","Toolbar","Typography","makeStyles","Container","CircularProgress","ResultPage","getSearchResults","SearchBar","getAllAuthors","getAllBookTitles","useStyles","theme","icon","marginRight","spacing","cardGrid","paddingTop","paddingBottom","footer","backgroundColor","palette","background","paper","padding","margin","formControl","minWidth","dummy_authors","name","SearchPage","classes","state","setState","apiResponse","books","searchTerms","searchQuote","isLoading","errorOccur","errorMsg","success","authors","book_titles","console","log","getAuthorsandBookNames","then","response","catch","errorResponse","handleRequest","searchInput","quote","bookSearch","author","bookTitle","genre","yearFrom","yearTo","minRating","requestError","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAGA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADT,GADiC;AAIvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAERG,IAAAA,aAAa,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAJ6B;AAQvCI,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAER,KAAK,CAACS,OAAN,CAAcC,UAAd,CAAyBC,KADpC;AAENC,IAAAA,OAAO,EAAEZ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFH,GAR+B;AAYvCU,EAAAA,MAAM,EAAE;AACNA,IAAAA,MAAM,EAAEb,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,GAZ+B;AAevCW,EAAAA,WAAW,EAAE;AACXD,IAAAA,MAAM,EAAEb,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXY,IAAAA,QAAQ,EAAE;AAFC;AAf0B,CAAZ,CAAD,CAA5B;AAsBA,IAAIC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAD,EACnB;AAACA,EAAAA,IAAI,EAAC;AAAN,CADmB,EAEpB;AAACA,EAAAA,IAAI,EAAC;AAAN,CAFoB,EAGpB;AAACA,EAAAA,IAAI,EAAC;AAAN,CAHoB,EAIpB;AAACA,EAAAA,IAAI,EAAC;AAAN,CAJoB,EAKpB;AAACA,EAAAA,IAAI,EAAC;AAAN,CALoB,CAApB;AAOA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AAEA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtC,QAAQ,CAAC;AACjCuC,IAAAA,WAAW,EAAE;AACXC,MAAAA,KAAK,EAAC;AADK,KADoB;AAIjCC,IAAAA,WAAW,EAAG,EAJmB;AAKjCC,IAAAA,WAAW,EAAE,EALoB;AAMjCC,IAAAA,SAAS,EAAG,KANqB;AAOjCC,IAAAA,UAAU,EAAC,KAPsB;AAQjCC,IAAAA,QAAQ,EAAC,EARwB;AASjCC,IAAAA,OAAO,EAAE,KATwB;AAUjCC,IAAAA,OAAO,EAAG,EAVuB;AAWjCC,IAAAA,WAAW,EAAG;AAXmB,GAAD,CAAlC;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAjBmC,CAoBnC;;AACAjD,EAAAA,SAAS,CAAC,MAAM;AACdgD,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACE,UAAMC,sBAAsB,GAAG,YAAY;AACzC,UAAIJ,OAAO,GAAG,EAAd;AACA,UAAIC,WAAW,GAAG,EAAlB;AACA,YAAMlC,aAAa,GAChBsC,IADG,CACEC,QAAQ,IAAI;AAChB;AACAN,QAAAA,OAAO,GAAGM,QAAQ,CAACN,OAAnB;AACD,OAJG,EAKHO,KALG,CAKGC,aAAa,IAAI;AACtBN,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,aAA7B;AACD,OAPG,CAAN;AASE,YAAMxC,gBAAgB,GACrBqC,IADK,CACAC,QAAQ,IAAI;AAChB;AACAL,QAAAA,WAAW,GAAGK,QAAQ,CAACL,WAAvB;AACD,OAJK,EAKLM,KALK,CAKCC,aAAa,IAAI;AACtBN,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,aAA7B;AACD,OAPK,CAAN;AASAjB,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELW,QAAAA,WAAW,EAAEA,WAFR;AAGLD,QAAAA,OAAO,EAACA;AAHH,OAAD,CAAR;AAKH,KA1BD;;AA8BAI,IAAAA,sBAAsB;AAEvB,GAlCM,EAkCJ,EAlCI,CAAT,CArBmC,CAuDzB;;AAGZ;AACA;AACA;AACA;;AACE,QAAMK,aAAa,GAAG,MAAOC,WAAP,IAAuB;AAE3C,QAAI;AACFC,MAAAA,KADE;AAEFC,MAAAA,UAFE;AAGFC,MAAAA,MAHE;AAIFC,MAAAA,SAJE;AAKFC,MAAAA,KALE;AAMFC,MAAAA,QANE;AAOFC,MAAAA,MAPE;AAQFC,MAAAA;AARE,QAQWR,WARf;AAWAnB,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYM,MAAAA,SAAS,EAAE,IAAvB;AAA6BuB,MAAAA,YAAY,EAAE,EAA3C;AAA+C3B,MAAAA,WAAW,EAAE;AAA5D,KAAD,CAAR;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACM,SAAlB;AAGA,UAAM/B,gBAAgB,CACpB+C,UAAU,GAAG,eAAH,GAAqB,gBADX,EAGpB;AAACD,MAAAA,KAAD;AAAQE,MAAAA,MAAR;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA,KAA3B;AAAkCC,MAAAA,QAAlC;AAA4CC,MAAAA,MAA5C;AAAoDC,MAAAA;AAApD,KAHoB,CAAhB,CAKDb,IALC,CAKIC,QAAQ,IAAI;AACd;AACAf,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELM,QAAAA,SAAS,EAAE,KAFN;AAGLJ,QAAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAGa,QAAQ,CAACb;AADN,SAHR;AAIsB;AAC3B0B,QAAAA,YAAY,EAAE,EALT;AAMLpB,QAAAA,OAAO,EAAC,IANH;AAOLF,QAAAA,UAAU,EAAE,KAPP;AAQLH,QAAAA,WAAW,EAAEY,QAAQ,CAACZ,WARjB;AASLC,QAAAA,WAAW,EAAEgB;AATR,OAAD,CAAR;AAWH,KAlBC,EAmBDJ,KAnBC,CAmBKC,aAAa,IAAI;AACpBjB,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELM,QAAAA,SAAS,EAAE,KAFN;AAGLG,QAAAA,OAAO,EAAG,KAHL;AAILF,QAAAA,UAAU,EAAE,IAJP;AAKLC,QAAAA,QAAQ,EAAEU,aALL;AAMLhB,QAAAA,WAAW,EAAE;AACXmB,UAAAA,KAAK,EAAC;AADK;AANR,OAAD,CAAR;AAUH,KA9BC,CAAN;AA+BD,GAhDD;;AAkDA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,8BAEE,QAAC,SAAD;AAAW,QAAA,aAAa,EAAEF,aAA1B;AAA0C,QAAA,OAAO,EAAEnB,KAAK,CAACU,OAAzD;AAAkE,QAAA,WAAW,EAAEV,KAAK,CAACW;AAArF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEZ,OAAO,CAACf,QAA9B;AAAwC,QAAA,QAAQ,EAAC,IAAjD;AAAA,mBAEGgB,KAAK,CAACM,SAAN,gBACG,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf,CACF;AADE;AAED,UAAA,OAAO,EAAC,QAFP;AAGD,UAAA,UAAU,EAAC,QAHV;AAAA,iCAKF,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AALE;AAAA;AAAA;AAAA;AAAA,gBADH,GASCN,KAAK,CAACS,OAAN,KACCT,KAAK,CAACE,WAAN,CAAkBC,KAAlB,CAAwB2B,MAAxB,GAA+B,CAAhC,gBACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE9B,KAAK,CAACE,WAAN,CAAkBC,KAAvC;AAA8C,UAAA,WAAW,EAAEH,KAAK,CAACI,WAAjE;AAA8E,UAAA,WAAW,EAAEJ,KAAK,CAACK;AAAjG;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAEK,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAC,QAA/B;AAAwC,UAAA,KAAK,EAAC,SAA9C;AAAwD,UAAA,SAAS,EAAC,eAAlE;AAAA,oBAAmF;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAHL,CAXJ,CAeM;AAfN,UAiBGL,KAAK,CAACO,UAAN,iBAAoB,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAC,QAA/B;AAAwC,UAAA,KAAK,EAAC,OAA9C;AAAsD,UAAA,SAAS,EAAC,eAAhE;AAAA,oBAAkF,qDAAoDP,KAAK,CAACQ,QAAS;AAArJ;AAAA;AAAA;AAAA;AAAA,gBAjBvB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GAjKuBV,U;UACNnB,S;;;KADMmB,U","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport BookIcon from '@material-ui/icons/Book';\nimport Grid from '@material-ui/core/Grid';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport ResultPage from \"./ResultPage.js\"\nimport getSearchResults from \"../api/getSearchResults.js\";\nimport SearchBar from \"../components/SearchBar.js\";\nimport getAllAuthors from \"../api/getAllAuthors.js\"\nimport getAllBookTitles from \"../api/getAllBookTitles\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n\n}));\n\nlet dummy_authors = [{name:\"Janish\"}\n,{name:\"Harry poppins\"},\n{name:\"Anna michin\"},\n{name:\"Mike\"},\n{name:\"Joah noah\"},\n{name:\"Michelin\"}]\n\nexport default function SearchPage() {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    apiResponse: {\n      books:[]\n    } , \n    searchTerms : [],\n    searchQuote: \"\",\n    isLoading : false,\n    errorOccur:false,\n    errorMsg:\"\",\n    success: false,\n    authors : [],\n    book_titles : []\n  });\n\n  console.log(\"Search page render\")\n\n\n  // Use effect hook that will be triggered once, on render, to fetch the Author names\n  useEffect(() => {\n    console.log(\"Hook to get author names\")\n      const getAuthorsandBookNames = async () => {\n        let authors = []\n        let book_titles = []\n        await getAllAuthors()\n          .then(response => {\n            // console.log(\"repsonse within author hook\",response);\n            authors = response.authors\n          })\n          .catch(errorResponse => {\n            console.log(\"Error response\",errorResponse)\n          });\n\n          await getAllBookTitles()\n          .then(response => {\n            // console.log(\"repsonse within book hook\",response);\n            book_titles = response.book_titles\n          })\n          .catch(errorResponse => {\n            console.log(\"Error response\",errorResponse)\n          });\n\n          setState({\n              ...state,\n              book_titles: book_titles,\n              authors:authors\n          })\n      };\n\n    \n\n      getAuthorsandBookNames();\n\n    }, []); // empty list of dependencies ensures the hooks is only called upon rendering of the component\n\n\n/* \nSingle handleRequest function that will trigger the proper API function based on the\ntype of search \n */\n  const handleRequest = async (searchInput) => {\n\n    let {\n      quote, \n      bookSearch,\n      author ,\n      bookTitle,\n      genre,\n      yearFrom,\n      yearTo,\n      minRating} = searchInput\n\n\n    setState({ ...state, isLoading: true, requestError: \"\", apiResponse: \"\"});\n    console.log(state.isLoading)\n    \n    \n    await getSearchResults(\n      bookSearch ? \"/books_search\" : \"/quotes_search\",\n\n      {quote, author ,bookTitle, genre, yearFrom, yearTo, minRating}\n      )\n        .then(response => {\n            // console.log(\"res in setAPIResponse: \" + JSON.stringify(response));\n            setState({\n                ...state,\n                isLoading: false,\n                apiResponse: {\n                  books : response.books}, // book object, might contain quote as well \n                requestError: \"\",\n                success:true,\n                errorOccur: false,\n                searchTerms: response.searchTerms,\n                searchQuote: quote\n            });\n        })\n        .catch(errorResponse => {\n            setState({\n                ...state,\n                isLoading: false,\n                success : false,\n                errorOccur: true,\n                errorMsg: errorResponse,\n                apiResponse: {\n                  quote:\"\"\n                }\n            });\n        });        \n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      {/* <AppBar position=\"relative\">\n        <Toolbar>\n          <BookIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Book Search Engine\n          </Typography>\n        </Toolbar>\n      </AppBar> */}\n      <main>\n        {/* Search bar including the Advance search options */}\n        <SearchBar handleRequest={handleRequest}  authors={state.authors} book_titles={state.book_titles} />\n\n        {/* Results container */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* Container to hold the results of the search  */}\n          {state.isLoading\n          ? ( <Grid container \n            // spacing={6}\n             justify=\"center\"   \n             alignItems=\"center\" \n             >\n            <CircularProgress />\n          </Grid>) \n          :  ( \n            state.success && (\n            (state.apiResponse.books.length>0 )\n            ? ( <ResultPage results={state.apiResponse.books} searchTerms={state.searchTerms} searchQuote={state.searchQuote}/>)\n            :  ( <Typography variant=\"h6\" align='center' color='primary' className=\"error-message\">{\"It seems there were no results for your query.\"}</Typography> )\n           )) // provide list of results\n          }\n          {state.errorOccur && <Typography variant=\"h6\" align='center' color='error' className=\"error-message\">{`Your request has timed out. The error message is: ${state.errorMsg}`}</Typography> }\n        </Container>\n      </main>\n\n      {/* Footer */}\n      {/* <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n      </footer> */}\n      {/* End footer */}\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}