{"ast":null,"code":"var _jsxFileName = \"/Users/yussefsoudan/Studies/Uni/year-4-cs/TTDS/CW3/ttds-14/website/book-search-client/src/views/ResultPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BookCard from \"../components/BookCard.js\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120\n  }\n})); //  props will be a list of book objects\n\nexport default function ResultPage({\n  results,\n  searchTerms,\n  searchQuote\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    data: [],\n    searchTerms: [],\n    offset: 1,\n    perPageResults: 10,\n    sort: false,\n    searchQuote: \"\"\n  });\n  console.log(\"Result page rendered\");\n  useEffect(() => {\n    const onRender = async () => {\n      console.log(\"Use effect hook\");\n      setState({ ...state,\n        data: results,\n        searchTerms: searchTerms,\n        searchQuote: searchQuote\n      });\n    };\n\n    onRender();\n  }, []);\n\n  const handlePaginationClick = offset => {\n    setState({ ...state,\n      offset: offset\n    });\n  };\n\n  const handleSort = (key, value) => {\n    console.log(\"Sort\");\n    var arr = state.data;\n    arr = sortByKey(arr, key); // arr = sortByKey(arr,\"averageRating\")\n\n    setState({ ...state,\n      sort: value,\n      data: arr,\n      sorting: false\n    });\n    console.log(\"Sorted results\", state.data);\n  };\n\n  const sortByKey = (array, key) => {\n    return array.sort(function (a, b) {\n      var x = a[key];\n      var y = b[key];\n      return x < y ? 1 : x > y ? -1 : 0;\n    });\n  }; // Calculate how many pagination page we will have \n\n\n  var length = Object.keys(state.data).length;\n  var count;\n  if (length % Number(state.perPageResults) == 0) count = Math.floor(length / Number(state.perPageResults));else count = Math.floor(length / Number(state.perPageResults)) + 1;\n  console.log(\"Page count\", count);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: \"book-container\",\n    spacing: 6,\n    justify: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"book-card-result\",\n      xs: 8,\n      children: [length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [length > state.perPageResults && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            count: count,\n            page: state.offset,\n            onChange: (e, offset) => handlePaginationClick(offset)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"genre\",\n              children: \"Sort by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"sort-selcet\",\n              id: \"sort-select\",\n              value: state.genre,\n              onChange: e => handleSort(e.target.value, true),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"title\",\n                children: \"Book title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"averageRating\",\n                children: \"Average Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"pageCount\",\n                children: \"Page count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), state.data.slice((state.offset - 1) * state.perPageResults, (state.offset - 1) * state.perPageResults + Number(state.perPageResults)).filter(book => {\n        return book.title != null;\n      }).map((book, idx) => /*#__PURE__*/_jsxDEV(BookCard, {\n        item: true,\n        resultObj: book,\n        searchTerms: state.searchTerms,\n        searchQuote: searchQuote\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }, this)), length > state.perPageResults && /*#__PURE__*/_jsxDEV(Pagination, {\n        count: count,\n        page: state.offset,\n        onChange: (e, offset) => handlePaginationClick(offset)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResultPage, \"BWI+GAPv5GDLbnjYbllrKfPSvwk=\", false, function () {\n  return [useStyles];\n});\n\n_c = ResultPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["/Users/yussefsoudan/Studies/Uni/year-4-cs/TTDS/CW3/ttds-14/website/book-search-client/src/views/ResultPage.js"],"names":["React","useState","useEffect","Grid","BookCard","Pagination","Switch","FormControlLabel","CircularProgress","Typography","MenuItem","Select","InputLabel","FormControl","makeStyles","useStyles","theme","formControl","minWidth","ResultPage","results","searchTerms","searchQuote","classes","state","setState","data","offset","perPageResults","sort","console","log","onRender","handlePaginationClick","handleSort","key","value","arr","sortByKey","sorting","array","a","b","x","y","length","Object","keys","count","Number","Math","floor","e","genre","target","slice","filter","book","title","map","idx"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BookCard from \"../components/BookCard.js\"\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n      // margin: theme.spacing(1),\n      minWidth: 120,\n    },\n}));\n\n\n//  props will be a list of book objects\nexport default function ResultPage({results, searchTerms, searchQuote}) {\n      const classes = useStyles();\n\n      const [state, setState] = useState({\n          data : [],\n          searchTerms : [],\n          offset : 1,\n          perPageResults: 10,\n          sort: false,\n          searchQuote : \"\"\n\n        });\n\n        console.log(\"Result page rendered\")\n\n        \n        useEffect(() => {\n          const onRender = async () => {\n            console.log(\"Use effect hook\")\n            setState({...state, data:results, searchTerms : searchTerms, searchQuote : searchQuote}) \n            }\n          onRender()\n        },[]);\n\n\n        const handlePaginationClick = (offset) => {\n          setState({...state,offset:offset})\n        }\n\n        const handleSort = (key,value) => {\n          console.log(\"Sort\")\n          var arr = state.data\n          arr = sortByKey(arr,key)\n\n          // arr = sortByKey(arr,\"averageRating\")\n          setState({...state,sort:value,data:arr,sorting:false})\n          console.log(\"Sorted results\",state.data)\n        }\n\n        const sortByKey = (array, key) => {\n          return array.sort(function(a, b) {\n              var x = a[key]; \n              var y = b[key];\n              return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n          });\n      }\n\n        // Calculate how many pagination page we will have \n        var length = Object.keys(state.data).length;\n        var count;\n        if (length % Number(state.perPageResults) == 0)\n          count = Math.floor(length/Number(state.perPageResults)) \n        else\n          count = Math.floor(length/Number(state.perPageResults)) + 1\n        console.log(\"Page count\",count)\n\n\n        return (\n        <Grid container \n        className=\"book-container\" \n        spacing={6}\n         justify=\"center\"   \n         alignItems=\"center\" \n         >\n           \n          <Grid \n            item \n            className=\"book-card-result\"\n            xs={8}\n          >\n\n            {length> 0 && ( \n            <Grid container spacing={3}>  \n            {length> state.perPageResults &&\n              <Grid item xs={8} >\n                  <Pagination \n                  count={count} \n                  page={state.offset} \n                  onChange={(e, offset) => handlePaginationClick(offset)} />\n              </Grid>\n              }\n\n              {/* <Grid item xs={2} >\n                <FormControlLabel\n                control={<Switch checked={state.sort} onChange={e => handleSort(\"averageRating\",e.target.checked)} name=\"sort\" color=\"primary\"/>}\n                label=\"Average Rating\"\n                labelPlacement=\"End\"\n                />\n              </Grid>\n            </Grid>          */}\n\n            <Grid item xs={2} >\n            <FormControl className={classes.formControl} >\n                <InputLabel id=\"genre\">Sort by</InputLabel>\n                <Select\n                  labelId=\"sort-selcet\"\n                  id=\"sort-select\"\n\n                  value={state.genre}\n                  onChange={e => handleSort(e.target.value,true)}\n                >\n                  <MenuItem value={\"title\"}>Book title</MenuItem>\n                  <MenuItem value={\"averageRating\"}>Average Rating</MenuItem>\n                  <MenuItem value={\"pageCount\"}>Page count</MenuItem>\n\n                  {/* <MenuItem value={30}>Thirty</MenuItem> */}\n                </Select>\n            </FormControl>\n            </Grid>\n            </Grid>\n            )        \n            \n            \n            \n            }\n\n\n\n            { state.data.slice(\n             (state.offset -1 )*state.perPageResults, \n              (state.offset-1)*state.perPageResults + Number(state.perPageResults)).filter((book) => {\n                  return book.title != null;\n              }).map((book,idx) =>\n                  <BookCard  item key={idx} resultObj={book} searchTerms={state.searchTerms} searchQuote={searchQuote}/>\n              )\n            }\n\n            {length> state.perPageResults &&\n             <Pagination \n             count={count} \n             page={state.offset} \n             onChange={(e, offset) => handlePaginationClick(offset)} />\n            }\n\n          </Grid>\n        </Grid> \n        \n        )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}